{"version":3,"sources":["Common/index.js","Data/static.js","Data/resources.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/arrayToObject.js","MetaDash/Languages/index.js","Viz/Histogram/index.js","Viz/D3Component/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","Inputs/ChecklistInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Inputs/DoubleSlider/index.js","Inputs/HoverText/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","FortunoffApp/ResultList/index.js","FortunoffApp/ResultList/ResultListItem/index.js","MetaDash/Results/index.js","MetaDash/index.js","SiteBanner/index.js","App.js","FortunoffApp/fortunize.js","serviceWorker.js","index.js","Data/getRecordingYear.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","__webpack_require__","r","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","getRecordingYear","getGender","__all","all","filters","itemField","itemFilters","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","getResources","options","filterBirthPlaces","birthplaces","place","birth_place_cities","birth_place_countries","j","city","country","split","filterBirthPlacesFactory","resourceContainsAllSubjects","gender","dateRanges","recording","recordingYear","birth","birthYears","birth_years","reduce","curr","next","resourceContainsOnlyPrograms","resourceContainsAllInterviewers","language","query","filter","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","genderString","bind","assertThisInitialized","yearRangeString","languagesString","programString","birthplaceString","men","women","both","react_default","a","createElement","className","arr","join","languageCount","keys","summaryData","languages","numeral","format","affiliateCount","yearRange","metaObject","values","map","x","Number","sort","reverse","birthYearRange","recordingYearRange","recordingYears","items","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","React","Component","state","Men","Women","Both","menRef","createRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","Error","concat","newState","objectSpread","setState","selections","push","updateSelections","vals","total","label","ref","d3","transition","duration","ease","style","_this2","toggleState","onClick","elem","trackScrolling","poolRef","itemCount","increment","scrollBottom","current","scrollTop","getBoundingClientRect","height","scrollHeight","addEventListener","removeEventListener","width","showBars","subtotal","nextItem","count","showAll","allItems","b","slice","itemDict","val","barWidth","handleItemClick","key","renderBar","objectToArray","obj","arrayToObject","forEach","listProps","CountListWithBars_default","initializeChart","updateChart","svg","html","selectAll","remove","xAxisG","append","classed","yAxisG","barG","data","node","minYear","maxYear","countRange","margin","xScale","domain","apply","padding","rangeRound","left","right","tickSteps","tickValues","xAxis","tickFormat","e","attr","bottom","yScale","top","yAxis","tickSizeOuter","ticks","Math","floor","undefined","ty","t","enter","barClass","bandwidth","update","exit","window","on","redrawChart","D3Component","setMargin","currentWidth","newMargin","_this3","newWidth","document","body","clearTimeout","timeout","setTimeout","PureComponent","h","children","size","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","mouseInCallback","mouseOutCallback","clickCallback","prevProps","prevState","min","arr1","arr2","allItemsMatch","root","parentId","packLayout","allowInteraction","y","onMouseOver","onMouseOut","each","handle","newRadius","currentRadius","random","callback","updateValue","target","value","onChange","placeholder","type","handleClick","SelectionPooltem_default","data-value","TagPoolItem_default","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","newSelections","selectionItem","toConsumableArray","dropID","String","filterItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","handles","range","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","handleWidth","invert","round","select","text","xValues","render","innerHTML","bbox","handleHeight","trackHeight","yCenter","handleGroups","raise","yr","getBBox","oldProps","newData","legitArray","get","prototype","arrsMatch","hoverText","htext","dropCallback","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","lazy","TagFilter_default","setText","handleMouseIn","handleMouseOut","TreeMap_default","HoverText_default","ItemSelector_default","arguments","selectionsDict","selectionsWithoutCurrentItem","_this$props$filterIte","_this$props$filterIte2","slicedToArray","allInterviewers","getSuggestions","cleanClusterData","replace","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","cleanPlaceName","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","react_autosuggest_dist_default","idx","WrappedComponent","limit","renderResult","resultsRef","decideToIncrement","result","rel","href","link","_","parentInfo","vheight","distanceFromBottom","results","pageYOffset","innerHeight","offsetHeight","ResultList_default","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","pymChild","pym","Child","polling","_data$getData","resources","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","yrs","BirthPlaces_default","Interviewers_default","search","retDict","retItem","Programs_default","SubjectHeadings_default","Results_default","YaleLogoImage","YaleLogoSVG","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","SiteBanner_YaleLogoImage","FortunoffTitleSVG","fontFamily","fontSize","fontWeight","line-spacing","alt","SiteBanner_YaleLogoSVG","SiteBanner_FortunoffTitleSVG","App","WrappedApp","FortunizedApp","MetaDash","_React$Component","_class","inherits","createClass","SiteBanner_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","record","recording_dates","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.2de90a32.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst __all = require(\"./json/index.8.min.json\");\nconst all = () => __all;\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\n// TODO - eventually, I should just make all of the filters into factories \n//        like this one, so the function is declared once per query \nlet filterBirthPlacesFactory = options => {\n\n    if (!options\n        || !options.birthplaces\n        || (options.birthplaces || []).length < 1) {\n        return () => true\n    }\n\n    return r => {\n        let place = options.birthplaces[0];\n\n        // these two should always match\n        if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n\n        for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n            let city = r.birth_place_cities[j],\n                country = r.birth_place_countries[j];\n            //if (!city || !country ){ return false}\n            if (normalizeString(country) !== normalizeString(place.country)) return false;\n\n            if (place.city) {\n                //console.log(\"There's a city to filter\", place)\n                // if there's a city, limit by that as well\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            } //else { console.log(\"there's no city required\", city, country, place.city, place.country, place) }\n\n            return true;\n        }\n\n        return false;\n    }\n\n}\n\nfilters.getResources = options => {\n\n    let filterBirthPlaces = filterBirthPlacesFactory(options)\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        if (options.dateRanges\n            && options.dateRanges.recording) {\n            const recordingYear = getRecordingYear(r);\n            if (recordingYear < options.dateRanges.recording[0]\n                || recordingYear > options.dateRanges.recording[1]\n                || !recordingYear) { return false }\n\n        } else {\n            // console.log(\"Skipping recording year filter\")\n        }\n\n        // TODO - filter by year of birth\n        if (options.dateRanges && options.dateRanges.birth) {\n            const birthYears = r.birth_years || [];\n            if (birthYears.length < 1){ return false}\n            if (!birthYears.reduce((curr, next) => {\n                if (!curr) { return false }\n                if (!options) { return true };\n                if (!options.dateRanges) { return true };\n                if (!options.dateRanges.birth) { return true }\n                if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n\n                // console.log(\"Birth year filter passed\", curr, next, options.dateRanges.birth)\n\n                return true;\n            }, true)) { \n                return false \n            } else {\n                // console.log(\"Birth year filter passed\", r)\n            }\n\n        } else {\n            // console.log(\"Skipping birth year filter\")\n        }\n\n        if (!filterBirthPlaces(r)) { return false }\n        // if ((options.birthplaces || []).length > 0) {\n\n        //     let place = options.birthplaces[0];\n\n        //     for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n        //         if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n        //         let city = r.birth_place_cities[j],\n        //             country = r.birth_place_countries[j];\n        //         if (normalizeString(country) !== normalizeString(place.country)) return false;\n        //         if (place.city){\n        //             // if there's a city, limit by that as well\n        //             if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n        //         }\n        //         console.log(\"match\", place, city, country)\n\n\n        //     }\n        // }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length === 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\n// let query = options => all().filter(filters.getResources(options))\n\nfunction query(options) {\n    if (!options) { return all() }\n    return all().filter(filters.getResources(options));\n}\n\nmodule.exports = { all, query }","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        function yearRange(metaObject){\n\n            const values = Object.keys(metaObject).map(x=>Number(x)).filter(x=>x).sort()\n            const min = values[0]\n            const max = values.reverse()[0]\n           \n\n            return [min, max]\n\n        }\n\n        const birthYearRange = yearRange(this.props.summaryData.birthYears);\n        const recordingYearRange = yearRange(this.props.summaryData.recordingYears);\n\n        return (\n            <div className=\"IntroProse\">\n                This visual search tool includes \n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                {/* &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])} */}\n                &nbsp;born {this.yearRangeString(birthYearRange || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                {/* &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])} */}\n                &nbsp;who were interviewed {this.yearRangeString( recordingYearRange || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw new Error(`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 10\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.scrollHeight //getBoundingClientRect().height,\n              //startPct = scrollTop / totalHeight,\n            //   endPct = scrollBottom / totalHeight\n            ;\n\n        // console.log(\"height\",totalHeight, this.poolRef.current.getBoundingClientRect().height)\n\n        // if ((endPct * 100) > 99){\n        if ((totalHeight - scrollBottom) <= 80){\n            // console.log(\"height\", scrollBottom, totalHeight)\n\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .slice(0,this.state.itemCount)\n                    // .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        // skip the filter loop\n                        if (!(item.label && item.label.length > 0)){ return (null)}\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\n//import D3Component from \"../../Viz/D3Component\";\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        // const margin = this.props.margin || {\n        //     bottom: 30,\n        //     top: 20,\n        //     left: 20,\n        //     right: 20\n        // }\n        const margin = this.state.margin;\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const tickSteps = width > 600 ? 10 : 40;\n        const tickValues = d3.range(this.props.minYear, this.props.maxYear, tickSteps);\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(tickValues)\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n        \n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            // .tickSize(width - margin.left - margin.right)\n            .ticks(height / 20)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        const ty = d3.transition().duration(1000).ease(d3.easeQuadIn);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition(ty)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(null)\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(1000))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n\n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n        this.setMargin = this.setMargin.bind(this);\n\n        this.state = {\n            currentWidth: -1,\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            }\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n\n    }\n\n    setMargin(newMargin){\n        const margin = {...this.state.margin, ...newMargin};\n        this.setState({ margin });\n\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return <div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>;\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        ).descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter => enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                // .on(\"click\", d => {\n                //     if (d.data.id in this.props.itemDict) {\n                //         return this.props.clickCallback(d)\n                //     }\n                // })\n                ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            // .on(\"click\", d => {\n            //     if (d.data.id in this.props.itemDict) {\n            //         return this.props.clickCallback(d.data)\n            //     }\n            // })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", item => this.props.mouseInCallback (item.data))\n            .on(\"mouseout\", item => this.props.mouseOutCallback (item.data))\n            .on(\"click\", item => this.props.clickCallback(item.data));\n\n\n        d3.select(window).on(\"resize.treemap\", this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","import \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\n// import { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = Math.min(width,\n                this.props.height || svg.node().getBoundingClientRect().height\n            );\n\n        svg.attr(\"height\", height + \"px\");\n\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        // let allItems = this.props.items;\n\n        //--------------HACK--------------\n        // TODO - Fix this q-a-d hack to prevent redrawing if the data have not changed\n        //        Get rid of this whole block....\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        if (allItemsMatch(\n\n            // this works, but do I really have to loop this each time?\n            // objectToArray((prevProps || {}).itemDict || {}),\n            // objectToArray(this.props.itemDict)\n\n            // this seems to be working just as well without the two loops\n            (prevProps || { items: [] }).items,\n            this.props.items\n        )) {\n            // console.log(\"redraw prevented\")\n\n            // objectToArray(this.props.itemDict))) {\n            return\n        }\n        // ... down to here.\n        //----------END OF HACK-----------\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => Number(d.count ? d.count : 0));\n\n        const data = root.descendants()\n            // .filter(d => d.data.label.indexOf(\"root\") < 0)\n            .filter(d => d.data.label.indexOf(\"|country\") < 0)\n            .filter(d => d.data.label.indexOf(\"country|\") < 0)\n\n\n\n        packLayout(root);\n        svg.selectAll(\"circle.city\")//.transition();\n\n        // const t = d3.transition().duration(1100);\n        this.allowInteraction = data.length;\n\n        // let nodes = \n\n        // function realChange(newRadius, oldRadius) {\n        //     return (newRadius > 0) && (oldRadius > 0);\n        // };\n\n        const r = d => d.r || 0;\n        const x = d => d.x || 0;\n        const y = d => d.y || 0;\n\n        svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    // .classed(\"city\", d => d.data.label.indexOf(\"|country\") < 0)\n                    // .classed(\"country\", d => d.data.label.indexOf(\",\") === 0)\n        \n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length === 1\n                            && this.props.selections[0].id === d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', x)\n                    .attr('cy', y)\n                    .attr('r', r),\n                update => update\n                    .attr(\"data-city\", d => d.data.label)\n                    .each(function (d, i) {\n\n                        let handle = d3.select(this).style(\"opacity\", \"0.5\");\n                        const newRadius = r(d);\n                        const currentRadius = d3.select(this).attr(\"r\") || 0;\n\n                        if (newRadius > 0 && currentRadius > 0 && currentRadius !== newRadius) {\n                            // console.log(\"Animating\")\n                            handle = handle.transition().duration(1000 * Math.random());\n                        } else {\n                            //console.log(\"Skipping animation\")\n                        }\n\n                        handle\n                            .style(\"opacity\", \"1\")\n                            .attr('cx', x)\n                            .attr('cy', y)\n                            .attr('r', r);\n\n                    }),\n                // .call(update => {\n                //     update\n                //     .transition(t)\n                //         .transition(function (d) {\n                //             console.log(\"Should I transition?\",d)\n                //             // only transition if \n                //             if (r(d) <= 0) { return null }\n                //             return realChange(r(d), d3.select(this).attr(\"r\") || 0) ? t: null\n                //         })\n                //         .attr('cx', x)\n                //         .attr('cy', y)\n                //         .attr('r', r);\n\n\n                // }),\n                exit => exit.remove()\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n        d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n\n    newMethod(handle, t) {\n        handle = handle.transition(t);\n        return handle;\n    }\n}","import React from 'react';\n// import CheckboxInput from \"../CheckboxInput\";\n// import GenericInput from \"../GenericInput\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            // items: props.items,\n            suggestions: [],\n            selections:[]\n        }\n\n        // react-autosuggest functions\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSectionTitle = this.renderSectionTitle.bind(this);\n    }\n\n    // Teach Autosuggest how to calculate suggestions for any given input value.\n    getSuggestions(value) {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        const ret = inputLength === 0 ? [] : this.props.items.filter(item =>{\n            return item.label.toLowerCase().slice(0, inputLength) === inputValue\n\n        });\n        return ret;\n    };\n\n    getSuggestionValue(suggestion) {\n        return suggestion.value;\n    }\n\n    renderSuggestion(suggestion) {\n        return (\n            <div>\n                {suggestion.label}\n            </div>\n        );\n    }\n\n    onChange = (event, { newValue , method}) => {\n\n        var selections = this.state.selections.slice();\n        if (method === \"click\" || method === \"enter\") { selections.push(newValue)}\n\n        this.setState({\n            value: newValue,\n            selections: selections\n        });\n    };\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n    \n    renderSectionTitle(_) {\n        return (null);\n    }\n\n    render() {\n        const { suggestions, value } = this.state;\n        const inputProps = {\n            placeholder: 'Begin typing',\n            value,\n            onChange: this.onChange,\n        };\n        return (\n            <div>\n                <div>\n                    {this.state.selections.map(item=>{\n                        return (<div>{item}</div>)\n                    })}\n                </div>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                />\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\"></div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 50\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.getBoundingClientRect().height,\n            //   startPct = scrollTop / totalHeight,\n              endPct = scrollBottom / totalHeight;\n\n        if (endPct * 100 > 80){\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    render(){\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"TagPool\">\n                {(this.props.items.slice(0, this.state.itemCount) || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections) {\n        this.props.updateSelections(newSelections);\n        this.setState({ searchTerm: \"\" })\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t,\n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        // return (null);\n\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n            .filter(i => i.id in this.props.allItems)\n\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                    <div className=\"type-area\">\n                        <div className=\"title-area\">{this.props.title}</div>\n                        <TextInput\n                            callback={this.updateSearchTerm}\n                            placeholder={this.props.placeholder}\n                            value={this.state.searchTerm}\n                        ></TextInput>\n\n                    </div>\n                    <SelectionPool\n                        callback={this.dropSelection}\n                        items={this.props.selections}\n                    ></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n//import D3Component from \"../../Viz/D3Component\"\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     handles: [],\n        //     range: [{ value: props.min }, { value: props.max }],\n        //     labels: [{ value: props.min }, { value: props.max }]\n        // }\n        this.state ={\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            },\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        };\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            // .range([this.margin.left, this.width - this.margin.right]);\n            .range([this.state.margin.left, this.width - this.state.margin.right]);\n\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function (d) {\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try {\n            this.svg.current.innerHTML = \"\";\n        } catch (e) { }\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6;\n\n        let yCenter = this.state.margin.top + (height - this.state.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        // this.yCenter = yCenter;\n        this.setState({ yCenter })\n        this.handleHeight = handleHeight;\n\n        // for really narrow windows, put the label\n        // top and center\n        // let labelX, labelY, \n        // trackX, trackWidth;\n        // // if (width < 300) {\n        // labelX = el => width / 2 - d3.select(el).node().getBBox().width / 2;\n        // // labelY = _ => 0;//yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // // labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // labelY = el => {\n        //     this.setMargin({ top: d3.select(el).node().getBBox().height })\n        //     // this.margin.top = d3.select(el).node().getBBox().height;\n        //     // yCenter += 4;\n        //     // this.setState({yCenter});\n        //     return d3.select(el).node().getBBox().height;\n        // }\n        let trackX = _ => this.state.margin.left,\n        trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n        // } else {\n        //     this.setMargin({ left: 140 });\n        //     // this.margin.left = 140;\n        //     labelX = el => 145 + 10 - d3.select(el).node().getBBox().width - 2 * handleWidth\n        //     labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        //     trackX = _ => this.state.margin.left;\n        //     trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n\n        // }\n\n        svg.attr(\"height\", height + \"px\");\n\n        // // add label and position it\n        // svg.append(\"text\")\n        //     .classed(\"track-label\", true)\n        //     .text(this.props.label || \"Double Slider\")\n        //     .attr(\"x\", function () { return labelX(this) })\n        //     .attr(\"y\", function () { return labelY(this) });\n        // // .attr(\"x\", function () { return (lpad + 10) - d3.select(this).node().getBBox().width - 2 * handleWidth })\n        // // .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", function () { return trackX(this) })\n            .attr(\"width\", function () { return trackWidth(this) })\n\n            // .attr(\"x\", this.state.margin.left)\n            // .attr(\"width\", width - this.state.margin.left - this.state.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.state.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                <div className=\"track-label\">{this.props.label}</div>\n                <div className=\"track-wrapper\">\n                    {D3Component.prototype.render.call(this)}\n                </div>\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n    render() {\n        let ret=(null);\n        if (!this.props.selections || this.props.selections.length < 1) {\n\n            ret = (\n                <div className=\"unselected-item\">\n                    <div className=\"x-icon\"></div>\n                    <div>\n                    {this.props.hoverText || \" \"}\n                    </div>\n                </div>                \n            )\n        } else {\n            let htext = this.props.hoverText.trim().length > 0 ? this.props.hoverText : this.props.label || \" \";\n            ret = (\n                <div \n                className=\"selected-item\"\n                onClick={this.props.dropCallback}\n                >\n                    <div className=\"x-icon\"></div>\n                    {/* <div>{this.props.label}</div> */}\n                    <div>{htext}</div>\n                </div>\n            )\n        }\n\n        return <div className=\"HoverText\">{ret}</div>\n\n        \n    }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n        \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 0,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        const props = {\n            ...this.props,\n            lazy: true\n        };\n\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { ItemSelector, HoverText } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.label = this.label.bind(this);\n\n    }\n\n\n    label() {\n        if (!this.props.selections || this.props.selections.length < 1) { return \"\" }\n        return this.props.selections[0].label;\n    }\n\n\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.label)\n    }\n\n    handleClick(item) {\n\n        if (this.props.selections\n            && this.props.selections.length > 0\n            && this.props.selections[0].id === item.id) {\n            this.props.updateSelections([])\n        } else {\n            this.props.updateSelections([item])\n        }\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                {/* <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div> */}\n                <HoverText\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    dropCallback={() => { this.props.updateSelections([]) }}\n                    label={this.label()}\n                ></HoverText>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n\n\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n\n        this.setState({\n            searchTerm, \n        })\n\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = this.props.selectionsDict; //arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        // 6-3-19 - updated to expect an array and a dictionary to prevent\n        // the need to use arrayToObject(dict+arr+interviewers)\n        const [items, itemDict] = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items,//: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict,//: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: this.props.selectionsDict,//arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\nimport { HoverText } from \"../../Inputs\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \",\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n        this.label = this.label.bind(this);\n        this.cleanPlaceName = this.cleanPlaceName.bind(this);\n\n        // this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    cleanPlaceName(item){\n        if (!item){ return \"\"}\n        let city = item.label.split(\"|\")[0].split(\",\")[0], \n        country = item.country;\n\n        if(city === country){ return country}\n        if (city && country){ return city + \", \" + country}\n        else if (city){ return city}\n        else if (country){ return country}\n        // return item.label.split(\"|\")[0].split(\",\")[0] + \", \" + item.country\n    }\n    label(){\n        if (!this.props.selections || this.props.selections.length < 1){ return \"\"}\n\n        return this.cleanPlaceName(this.props.selections[0]);\n//        return this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = [];\n\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                // only keep places with a city and country, in theory\n                place => place.label.split(\"|\").filter(x => x && x.length > 0).length === 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n\n                // const element = ret;\n\n                // if (addedCountries.indexOf(country) < 0) { \n                //     addedCountries.push(country);\n                //     const label = `${country}|root`,\n                //         newItem = { label, id: label };\n                //     countryItems.push(newItem)\n                //  }\n\n                return ret\n            });\n\n        // clusterData = clusterData.concat(countryItems);\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|country`, // changed from \"root\" to \"country\"\n                newItem = { label, id: label, country };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"country|\", id: \"country|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n//        return suggestion.label;\n        return this.cleanPlaceName(suggestion);\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value.replace(\":\",\"|\"))) >= 0)\n        // filter out roots\n            .filter(x => x.label.indexOf(\"|root\") < 0)\n            .filter(x => x.label.indexOf(\"root|\") < 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            searchTerm: \"\",\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {this.cleanPlaceName(suggestion)}\n                {/* {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")} */}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: this.cleanPlaceName(d) })\n\n        // this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \", \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    // renderHoverField() {\n    //     if (!this.props.selections || this.props.selections.length < 1) {\n\n    //         return (\n    //             <span>\n    //                 {this.state.hoverText || \" \"}\n    //             </span>\n    //         )\n    //     }\n    //     return (\n    //         <div \n    //         className=\"selected-item\"\n    //         onClick={this.dropSelection}\n    //         >\n    //             <div className=\"x-icon\"></div>\n    //             <div>{this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country}</div>\n    //         </div>\n    //     )\n    // }\n\n    placeLabel(){\n\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    // items={this.cleanClusterData()}\n                    // allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n\n                {/* <div className=\"hover-text\">\n                    {this.renderHoverField()}\n                </div> */}\n                <HoverText\n                    dropCallback={this.dropSelection}\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    label={this.label()}\n                ></HoverText>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport wrapResultListItem from \"./ResultListItem\";\nimport \"./style/main.scss\";\nexport default class extends React.Component {\n\n    render() {\n        return (<div className=\"ResultList\">\n            {this.props.items.map((item, idx)=>wrapResultListItem(item, idx))}\n        </div>);\n    }\n\n}","import React from 'react';\n\nexport default function wrapResultListItem(WrappedComponent, key){\n\n    return (\n        <div key={key} className=\"ResultListItem\">\n            {WrappedComponent}\n        </div>\n    )\n    // return class extends React.Component {\n    //     render(){return (\n    //         <div className=\"ResultListItem\">\n    //         </div>\n    //     )}\n    // }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n// import {ResultList} from \"@bit/jakekara.metadash.fortunoff-app\"\nimport { ResultList } from \"../../FortunoffApp\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef();\n\n        this.decideToIncrement = this.decideToIncrement.bind(this);\n\n        // if (this.props.pymChild) {\n        //     this.handlePymScroll = this.handlePymScroll.bind(this);\n        //     this.props.pymChild.onMessage('viewport-iframe-position', this.handlePymScroll);\n        // }\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n\n        // return class extends React.component {\n\n        //     render() {\n\n\n                return (\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={result.link}\n                        key={i}>\n                        <div className=\"result-item-container\">\n                            <div\n                                className={`result-item ${result.birth_years.length > 1 ? \"multiple\" : \"\"}`}>\n                                <div className=\"testimony-name\">\n                                    {result.title}\n                                </div>\n\n                                <div className=\"birth-year\">\n                                    {\n                                        result.birth_years\n                                            .filter(yr => yr)\n                                            .map(yr => (<li className=\"sub-item\" key={`by-${i}`}>{yr}</li>))\n                                            .concat(result.birth_place_cities\n                                                .filter((_, i) => result.birth_place_cities[i] || result.birth_place_countries[i])\n                                                .map((city, i) => (\n                                                    <li className=\"sub-item\" key={`bp-${i}`}>\n                                                        {city}{city && result.birth_place_countries[i] ? \", \" : \"\"}{result.birth_place_countries[i]}\n                                                    </li>\n                                                )\n                                                )\n\n                                            )\n                                            .slice(-2) // don't show more than two items\n\n                                    }\n\n                                </div>\n                                <div className=\"affiliate\">\n                                    {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                                </div>\n                                <div className=\"recording-year\">\n                                    {getRecordingYear(result)}\n                                </div>\n\n                                <div className=\"big-button-container\">\n                                    <div className=\"big-button\">View</div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </a>\n                )\n\n        //     }\n        // }\n    }\n\n    handlePymScroll(parentInfo) {\n        // this.props.pymChild.sendMessage(\n        //     \"console-log\",\n        //     parentInfo.split(\" \").map(x => Number(x))\n        // );\n        // parentInfo contains in order\n        // Viewport width and height.\n        // Iframe top, left, bottom and right positions.\n\n        const arr = parentInfo.split(\" \").map(x => Number(x)),\n            vheight = arr[1],\n            ibottom = arr[4],\n            distanceFromBottom = ibottom - vheight;\n\n        this.decideToIncrement(distanceFromBottom);\n    }\n\n    decideToIncrement(distanceFromBottom) {\n        // this.props.pymChild.sendMessage(\"console-log\", distanceFromBottom);\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        this.decideToIncrement(distanceFromBottom);\n\n        // if (this.props.results.length > this.state.limit\n        //     && distanceFromBottom < 100) {\n        //     this.setState({ limit: this.state.limit + this.state.increment })\n        // }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    \n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    \n                </div>\n                {/* {this.props.results.slice(0, this.state.limit).map(this.renderResult)} */}\n                <ResultList\n                    items={this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                ></ResultList>\n\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// import { TagFilter, RangeSlider } from '../Inputs';\n// import { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\nimport pym from \"pym.js\";\n\nimport \"./style/main.scss\";\n\n// TODO - Generate these numbers from the complete data set\n// rather than hard-coding them. \nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1892;\nconst BIRTH_MAX = 1960;\nconst RECORDING_MIN = 1979;\nconst RECORDING_MAX = 2017;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n        this.pymChild = new pym.Child({ polling: 50});\n\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        // console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).forEach(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        selectionsDict={arrayToObject(this.state.filters.interviewers)} // TODO - improve efficiency\n                        // allInterviewers={ data.interviewers.search() } // TODO - improve efficiency\n                        filterItems={t => {\n                            // 6-3-19 - just updated to return both an array and a dictionary\n                            // so it doesn't have to be retouched later on. (dict+arr+interviewers)\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            let retDict = {}\n                            let retArr = results\n                            .filter(i => i.id in this.state.summaryData.interviewers)\n                            .map(i => { \n                                const retItem = { ...i, count: this.state.summaryData.interviewers[i.id].count }\n                                retDict[i.id] = retItem;\n                                return retItem;\n                             })\n\n                            return [retArr, retDict];\n                            // return results\n                            //     .filter(i => i.id in this.state.summaryData.interviewers)\n                            //     .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        pymChild={this.pymChild}\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\n\nconst yaleLogoImgData = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGOGCHvlwAAA/5JREFUaAXtmP1x2kAQxeNM/o9KUCoIHVjugFQQpQKTChRXgFMBpALcgZQKIBWIDkwHzu+JO3tHn2CQR4P1Zp52b3dv7/ZWEhqunp6ePrwnfHxPxarWseBL7/jY4bHDF3YC4y19YQ2tlDN2uHIkF2YYO3xhDa2UM3a4ciQXZhg7fGENrZTzqWIZjiFiK9dQMoN38GRcDegfj4BqbmHkiCiw4XoDd/vhaVc9wynU/zxdjIgpo2uOch8KFSyUC3uosRWBr7qowzCEc1jGCsMEKqaJAb4YPkJBcgZlb5rTZbd7SU7IU1nHv6W3nNZPR3twsm+soUZXR9QFD91+91D21+KUua1r+oJ9kDaa+QFyBkMzblLnOAL4C27gYFEuWBv9UdrtojQuDycYYriFd3DQqCt4y47vza4jdLEJ6q5QPqi9dWDXuoK1RXVqZ/ba1OUpMRF8gBkcPJo+PFSsXmK+0BA9hktooe4qtqu7E2Ii+Bn+gxnUvHMiJJnW+Qr/wq0jwqDjlZ/i99DPjf2pSZxDP0GV17+zTZG54xrpoVwxbJqX+ECk9KY42SOYQuVcOSIKpFwn8Hn+s2KNRlewRcJAcwKoBdZuXJdngU/QJrx/Vlj2F81XHu+zMtmHFFfp1mf12MVpHzbXhLHyC5IhLObZyU36XLMMNHnhxhGybp4tTIvbmNzNlYih9Xk9kdMhQXq7lVMfgAxrYuy+F95vEzTpAcH+tFCL20dyAevm2Pi8JibF5pGg1OWQ3SNBqYvJXcCqwR85v0QOixxNLy3zlBcvF/sCi3DqhSNbE77hyJqcZ7DH5AhdHr2o6r7ZA+eXCL1+SMGKXcJbqOTCEqroOsie1TnOaLs2uX6jb8y4VT20YCWxBVq9dYGSM2QsnorQJFCxmRm3qscU3JqoxRngm0LdIdLPgei1SZq+tF6bz85TkSv4CL9DPfNf4BaeE+ExyfrqcM4m/EZu0DN4TmQki1xCPc9Lp3eKPjocsWroVt4hM6efU2xMshj94Eelj4LtG1QF94E/paR6dNow885jCranGPkEHTLEL3ooR+gHSJszNvYudUPA0gRF6GsoaREy0GHoHbJfy3+BtEh9sSxgGfrCka/4gjEyLAXqKy2BC5jCObRYM8ih7MqlLzXZPKTLVl5HthSWkWNIoc+xQn+eX05ix8QdjJRIOzdm/GhmS0+gFhb9ZlCLuBlS861dPoucgV3D65orXxnKNYU+rpB9/i+tW2gCBd2Cu0J7ucgXwDrfS9Thms+nGY05+yz48K2+YeQxL6033FZ/S40F93e2w8g8dngYfehvF2OH+zvbYWQeOzyMPvS3i7HD/Z3tMDKPHR5GH/rbxdjh/s52GJnfXYf/Ax099yeWp4N/AAAAAElFTkSuQmCC\"\nconst YaleLogoImage = () => <image x=\"0\" y=\"0\" width=\"42\" height=\"42\" href={`data:image/jpeg;base64,${yaleLogoImgData}`} />\n\n\nconst YaleLogoSVG = () => {\n    return (\n        <svg width=\"41px\" height=\"19px\" viewBox=\"0 0 41 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(-26.000000, -31.000000)\">\n                    <g transform=\"translate(26.000000, 20.000000)\">\n                        <YaleLogoImage></YaleLogoImage>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nconst FortunoffTitleSVG = () => {\n    return (<svg width=\"218px\" height=\"40px\" viewBox=\"0 0 218 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fontFamily=\"YaleNew-Roman, YaleNew\" fontSize=\"19\" fontWeight=\"normal\" line-spacing=\"24\">\n            <g transform=\"translate(-121.000000, -23.000000)\" fill=\"#1098AB\">\n                <text>\n                    <tspan x=\"121\" y=\"38\">Fortunoff Video Archive</tspan>\n                    <tspan x=\"121\" y=\"62\">for Holocaust Testimonies</tspan>\n                </text>\n            </g>\n        </g>\n    </svg>)\n}\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <header className=\"SiteBanner\">\n                <div className=\"site-logo\">\n                    <a alt=\"Yale University Library\" href=\"https://web.library.yale.edu/\"><YaleLogoSVG></YaleLogoSVG></a>\n                </div>\n                <div className=\"site-title\">\n                    <a alt=\"Fortunoff Video Archive for Holocaust Testimonies\" href=\"https://fortunoff.library.yale.edu/\">\n                    <FortunoffTitleSVG></FortunoffTitleSVG>\n                    </a>\n                </div>\n            </header>\n        );\n    }\n}","import React from 'react';\nimport MetaDash from './MetaDash';\nimport SiteBanner from './SiteBanner';\nimport {fortunize} from \"./FortunoffApp\";\n\nfunction App() {\n  const FortunizedApp = fortunize(MetaDash)\n  return (\n    <div className=\"App\">\n      <SiteBanner></SiteBanner>\n      <FortunizedApp></FortunizedApp>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default function fortunize(WrappedApp) {\n\n    return class extends React.Component {\n        render() {\n            return (<div className=\"FortunoffApp\">\n                <WrappedApp></WrappedApp>\n            </div>);\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    // let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.2.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.7.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}