{"version":3,"sources":["../dist/src/Viz/D3Component/index.js","Common/index.js","Data/static.js","Data/resources.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/arrayToObject.js","MetaDash/Languages/index.js","Viz/Histogram/index.js","Viz/D3Component/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","Inputs/ChecklistInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Inputs/DoubleSlider/index.js","Inputs/HoverText/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","FortunoffApp/ResultList/index.js","FortunoffApp/ResultList/ResultListItem/index.js","MetaDash/Results/index.js","MetaDash/index.js","SiteBanner/index.js","App.js","FortunoffApp/fortunize.js","serviceWorker.js","index.js","Data/getRecordingYear.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["Object","defineProperty","exports","value","default","obj","_react","__webpack_require__","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","key","configurable","writable","_defineProperties","target","props","i","length","descriptor","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","_default","_React$PureComponent","_this","call","instance","Constructor","TypeError","_classCallCheck","this","svg","createRef","initializeChart","bind","updateChart","redrawChart","setMargin","state","currentWidth","margin","top","left","right","bottom","protoProps","staticProps","subClass","superClass","create","_inherits","PureComponent","newMargin","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","setState","data","_this2","createElement","className","ref","elem","_this3","newWidth","window","document","body","getBoundingClientRect","width","clearTimeout","timeout","setTimeout","unidecode","require","module","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","r","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","getRecordingYear","getGender","__all","all","filters","itemField","itemFilters","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","getResources","options","filterBirthPlaces","birthplaces","place","birth_place_cities","birth_place_countries","j","city","country","split","filterBirthPlacesFactory","resourceContainsAllSubjects","gender","dateRanges","recording","recordingYear","birth","birth_years","reduce","curr","next","resourceContainsOnlyPrograms","resourceContainsAllInterviewers","language","query","classCallCheck","possibleConstructorReturn","genderString","assertThisInitialized","yearRangeString","languagesString","programString","birthplaceString","men","women","both","react_default","a","arr","join","languageCount","summaryData","languages","numeral","format","affiliateCount","items","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","React","Component","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","Error","concat","newState","objectSpread","selections","updateSelections","vals","total","label","d3","transition","duration","ease","style","toggleState","onClick","trackScrolling","poolRef","itemCount","increment","scrollBottom","current","scrollTop","height","scrollHeight","addEventListener","removeEventListener","showBars","subtotal","nextItem","count","showAll","allItems","sort","b","slice","map","itemDict","val","barWidth","handleItemClick","renderBar","objectToArray","arrayToObject","listProps","CountListWithBars_default","html","selectAll","remove","xAxisG","append","classed","yAxisG","barG","node","yearRange","minYear","maxYear","countRange","x","xScale","domain","padding","rangeRound","tickSteps","tickValues","xAxis","tickFormat","e","attr","yScale","yAxis","tickSizeOuter","ticks","Math","floor","undefined","ty","t","enter","barClass","bandwidth","update","exit","on","D3Component","h","children","size","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","mouseInCallback","mouseOutCallback","clickCallback","prevProps","prevState","min","arr1","arr2","allItemsMatch","root","parentId","packLayout","Number","allowInteraction","y","onMouseOver","onMouseOut","each","handle","newRadius","currentRadius","random","callback","updateValue","onChange","placeholder","type","handleClick","SelectionPooltem_default","data-value","TagPoolItem_default","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","newSelections","selectionItem","toConsumableArray","dropID","String","filterItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","buttonClass","defaultValue","ID","optionProps","assign","handles","range","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","handleWidth","invert","round","select","text","xValues","render","innerHTML","bbox","handleHeight","trackHeight","yCenter","handleGroups","raise","yr","getBBox","oldProps","newData","legitArray","get","arrsMatch","hoverText","htext","dropCallback","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","lazy","TagFilter_default","setText","handleMouseIn","handleMouseOut","TreeMap_default","HoverText_default","ItemSelector_default","selectionsDict","selectionsWithoutCurrentItem","_this$props$filterIte","_this$props$filterIte2","slicedToArray","allInterviewers","getSuggestions","cleanClusterData","replace","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","cleanPlaceName","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","idx","WrappedComponent","limit","renderResult","resultsRef","decideToIncrement","result","rel","href","link","_","parentInfo","vheight","distanceFromBottom","results","pageYOffset","innerHeight","offsetHeight","ResultList_default","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","pymChild","pym","Child","polling","_data$getData","resources","console","log","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","birthYears","yrs","recordingYears","BirthPlaces_default","Interviewers_default","search","retDict","retItem","Programs_default","SubjectHeadings_default","Results_default","YaleLogoImage","YaleLogoSVG","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","SiteBanner_YaleLogoImage","FortunoffTitleSVG","fontFamily","fontSize","fontWeight","line-spacing","alt","SiteBanner_YaleLogoSVG","SiteBanner_FortunoffTitleSVG","App","WrappedApp","FortunizedApp","MetaDash","_React$Component","_class","inherits","createClass","SiteBanner_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","record","recording_dates","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.767eb456.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(_default, _React$PureComponent);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.svg = _react.default.createRef();\n    _this.initializeChart = _this.initializeChart.bind(_assertThisInitialized(_this));\n    _this.updateChart = _this.updateChart.bind(_assertThisInitialized(_this));\n    _this.redrawChart = _this.redrawChart.bind(_assertThisInitialized(_this));\n    _this.setMargin = _this.setMargin.bind(_assertThisInitialized(_this));\n    _this.state = {\n      currentWidth: -1,\n      margin: props.margin || {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    };\n    _this.margin = props.margin || {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"setMargin\",\n    value: function setMargin(newMargin) {\n      var margin = _objectSpread({}, this.state.margin, {}, newMargin);\n\n      this.setState({\n        margin: margin\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateChart(this.props.data);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeChart();\n      this.updateChart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"div\", {\n        className: \"Viz\"\n      }, _react.default.createElement(\"div\", null), _react.default.createElement(\"svg\", {\n        ref: function ref(elem) {\n          _this2.svg = elem;\n        }\n      }));\n    }\n  }, {\n    key: \"redrawChart\",\n    value: function redrawChart() {\n      var _this3 = this; // prevent redraw if the width hasn't changed\n\n\n      var newWidth = window.document.body.getBoundingClientRect().width;\n\n      if (newWidth === this.state.currentWidth) {\n        return;\n      }\n\n      ;\n      this.setState({\n        currentWidth: newWidth\n      }); // only redraw at max once per second\n\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this3.initializeChart();\n\n        _this3.updateChart();\n      }, 1000);\n    } // Override this \n\n  }, {\n    key: \"initializeChart\",\n    value: function initializeChart() {} // Override this\n\n  }, {\n    key: \"updateChart\",\n    value: function updateChart(data) {}\n  }]);\n\n  return _default;\n}(_react.default.PureComponent);\n\nexports.default = _default;","var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst __all = require(\"./json/index.8.min.json\");\nconst all = () => __all;\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\n// TODO - eventually, I should just make all of the filters into factories \n//        like this one, so the function is declared once per query \nlet filterBirthPlacesFactory = options => {\n \n    if (!options \n        || !options.birthplaces\n        || (options.birthplaces || []).length < 1){ \n            return () => true \n        }\n\n    return r => {\n        let place = options.birthplaces[0];\n\n        // these two should always match\n        if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n\n        for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n    \n            let city = r.birth_place_cities[j],\n                country = r.birth_place_countries[j];\n            //if (!city || !country ){ return false}\n            if (normalizeString(country) !== normalizeString(place.country)) return false;\n\n            if (place.city){\n                //console.log(\"There's a city to filter\", place)\n                // if there's a city, limit by that as well\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            } //else { console.log(\"there's no city required\", city, country, place.city, place.country, place) }\n\n            return true;\n        }\n\n        return false;\n    }\n\n}\n\nfilters.getResources = options => {\n\n    let filterBirthPlaces = filterBirthPlacesFactory(options)\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n    \n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        if (options.dateRanges\n            && options.dateRanges.recording) {\n            const recordingYear = getRecordingYear(r);\n            if (recordingYear < options.dateRanges.recording[0]\n                || recordingYear > options.dateRanges.recording[1]\n                || !recordingYear) { return false }\n\n        } else { \n            // console.log(\"Skipping recording year filter\")\n    }\n\n        // TODO - filter by year of birth\n        if (options.dateRanges && options.dateRanges.birth) {\n            const birthYears = r.birth_years || [];\n            if (!birthYears.reduce((curr, next) => {\n                if (!curr) { return false }\n                if (!options) { return true };\n                if (!options.dateRanges) { return true };\n                if (!options.dateRanges.birth) { return true }\n                if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n                return true;\n            }, true)) { return false }\n\n        } else { \n            // console.log(\"Skipping birth year filter\")\n        }\n\n        if (! filterBirthPlaces(r)){ return false}\n        // if ((options.birthplaces || []).length > 0) {\n            \n        //     let place = options.birthplaces[0];\n\n        //     for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n        //         if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n        //         let city = r.birth_place_cities[j],\n        //             country = r.birth_place_countries[j];\n        //         if (normalizeString(country) !== normalizeString(place.country)) return false;\n        //         if (place.city){\n        //             // if there's a city, limit by that as well\n        //             if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n        //         }\n        //         console.log(\"match\", place, city, country)\n\n\n        //     }\n        // }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length === 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\n// let query = options => all().filter(filters.getResources(options))\n\nfunction query(options){\n    if (!options){ return all()}\n    return all().filter(filters.getResources(options));\n}\n\nmodule.exports = { all, query }","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes\n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw new Error(`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 10\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.scrollHeight //getBoundingClientRect().height,\n              //startPct = scrollTop / totalHeight,\n            //   endPct = scrollBottom / totalHeight\n            ;\n\n        // console.log(\"height\",totalHeight, this.poolRef.current.getBoundingClientRect().height)\n\n        // if ((endPct * 100) > 99){\n        if ((totalHeight - scrollBottom) <= 80){\n            // console.log(\"height\", scrollBottom, totalHeight)\n\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .slice(0,this.state.itemCount)\n                    // .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        // skip the filter loop\n                        if (!(item.label && item.label.length > 0)){ return (null)}\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\n//import D3Component from \"../../Viz/D3Component\";\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        // const margin = this.props.margin || {\n        //     bottom: 30,\n        //     top: 20,\n        //     left: 20,\n        //     right: 20\n        // }\n        const margin = this.state.margin;\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const tickSteps = width > 600 ? 10 : 40;\n        const tickValues = d3.range(this.props.minYear, this.props.maxYear, tickSteps);\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(tickValues)\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n        \n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            // .tickSize(width - margin.left - margin.right)\n            .ticks(height / 20)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        const ty = d3.transition().duration(1000).ease(d3.easeQuadIn);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition(ty)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(null)\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(1000))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n\n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n        this.setMargin = this.setMargin.bind(this);\n\n        this.state = {\n            currentWidth: -1,\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            }\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n\n    }\n\n    setMargin(newMargin){\n        const margin = {...this.state.margin, ...newMargin};\n        this.setState({ margin });\n\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return <div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>;\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        ).descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter => enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                // .on(\"click\", d => {\n                //     if (d.data.id in this.props.itemDict) {\n                //         return this.props.clickCallback(d)\n                //     }\n                // })\n                ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            // .on(\"click\", d => {\n            //     if (d.data.id in this.props.itemDict) {\n            //         return this.props.clickCallback(d.data)\n            //     }\n            // })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", item => this.props.mouseInCallback (item.data))\n            .on(\"mouseout\", item => this.props.mouseOutCallback (item.data))\n            .on(\"click\", item => this.props.clickCallback(item.data));\n\n\n        d3.select(window).on(\"resize.treemap\", this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","import \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\n// import { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = Math.min(width,\n                this.props.height || svg.node().getBoundingClientRect().height\n            );\n\n        svg.attr(\"height\", height + \"px\");\n\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        // let allItems = this.props.items;\n\n        //--------------HACK--------------\n        // TODO - Fix this q-a-d hack to prevent redrawing if the data have not changed\n        //        Get rid of this whole block....\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        if (allItemsMatch(\n\n            // this works, but do I really have to loop this each time?\n            // objectToArray((prevProps || {}).itemDict || {}),\n            // objectToArray(this.props.itemDict)\n\n            // this seems to be working just as well without the two loops\n            (prevProps || { items: [] }).items,\n            this.props.items\n        )) {\n            // console.log(\"redraw prevented\")\n\n            // objectToArray(this.props.itemDict))) {\n            return\n        }\n        // ... down to here.\n        //----------END OF HACK-----------\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => Number(d.count ? d.count : 0));\n\n        const data = root.descendants()\n            // .filter(d => d.data.label.indexOf(\"root\") < 0)\n            .filter(d => d.data.label.indexOf(\"|country\") < 0)\n            .filter(d => d.data.label.indexOf(\"country|\") < 0)\n\n\n\n        packLayout(root);\n        svg.selectAll(\"circle.city\")//.transition();\n\n        // const t = d3.transition().duration(1100);\n        this.allowInteraction = data.length;\n\n        // let nodes = \n\n        // function realChange(newRadius, oldRadius) {\n        //     return (newRadius > 0) && (oldRadius > 0);\n        // };\n\n        const r = d => d.r || 0;\n        const x = d => d.x || 0;\n        const y = d => d.y || 0;\n\n        svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    // .classed(\"city\", d => d.data.label.indexOf(\"|country\") < 0)\n                    // .classed(\"country\", d => d.data.label.indexOf(\",\") === 0)\n        \n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length === 1\n                            && this.props.selections[0].id === d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', x)\n                    .attr('cy', y)\n                    .attr('r', r),\n                update => update\n                    .attr(\"data-city\", d => d.data.label)\n                    .each(function (d, i) {\n\n                        let handle = d3.select(this).style(\"opacity\", \"0.5\");\n                        const newRadius = r(d);\n                        const currentRadius = d3.select(this).attr(\"r\") || 0;\n\n                        if (newRadius > 0 && currentRadius > 0 && currentRadius !== newRadius) {\n                            // console.log(\"Animating\")\n                            handle = handle.transition().duration(1000 * Math.random());\n                        } else {\n                            //console.log(\"Skipping animation\")\n                        }\n\n                        handle\n                            .style(\"opacity\", \"1\")\n                            .attr('cx', x)\n                            .attr('cy', y)\n                            .attr('r', r);\n\n                    }),\n                // .call(update => {\n                //     update\n                //     .transition(t)\n                //         .transition(function (d) {\n                //             console.log(\"Should I transition?\",d)\n                //             // only transition if \n                //             if (r(d) <= 0) { return null }\n                //             return realChange(r(d), d3.select(this).attr(\"r\") || 0) ? t: null\n                //         })\n                //         .attr('cx', x)\n                //         .attr('cy', y)\n                //         .attr('r', r);\n\n\n                // }),\n                exit => exit.remove()\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n        d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n\n    newMethod(handle, t) {\n        handle = handle.transition(t);\n        return handle;\n    }\n}","import React from 'react';\n// import CheckboxInput from \"../CheckboxInput\";\n// import GenericInput from \"../GenericInput\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            // items: props.items,\n            suggestions: [],\n            selections:[]\n        }\n\n        // react-autosuggest functions\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSectionTitle = this.renderSectionTitle.bind(this);\n    }\n\n    // Teach Autosuggest how to calculate suggestions for any given input value.\n    getSuggestions(value) {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        const ret = inputLength === 0 ? [] : this.props.items.filter(item =>{\n            return item.label.toLowerCase().slice(0, inputLength) === inputValue\n\n        });\n        return ret;\n    };\n\n    getSuggestionValue(suggestion) {\n        return suggestion.value;\n    }\n\n    renderSuggestion(suggestion) {\n        return (\n            <div>\n                {suggestion.label}\n            </div>\n        );\n    }\n\n    onChange = (event, { newValue , method}) => {\n\n        var selections = this.state.selections.slice();\n        if (method === \"click\" || method === \"enter\") { selections.push(newValue)}\n\n        this.setState({\n            value: newValue,\n            selections: selections\n        });\n    };\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n    \n    renderSectionTitle(_) {\n        return (null);\n    }\n\n    render() {\n        const { suggestions, value } = this.state;\n        const inputProps = {\n            placeholder: 'Begin typing',\n            value,\n            onChange: this.onChange,\n        };\n        return (\n            <div>\n                <div>\n                    {this.state.selections.map(item=>{\n                        return (<div>{item}</div>)\n                    })}\n                </div>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                />\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\"></div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 50\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.getBoundingClientRect().height,\n            //   startPct = scrollTop / totalHeight,\n              endPct = scrollBottom / totalHeight;\n\n        if (endPct * 100 > 80){\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    render(){\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"TagPool\">\n                {(this.props.items.slice(0, this.state.itemCount) || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections) {\n        this.props.updateSelections(newSelections);\n        this.setState({ searchTerm: \"\" })\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t,\n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        // return (null);\n\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n            .filter(i => i.id in this.props.allItems)\n\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                    <div className=\"type-area\">\n                        <div className=\"title-area\">{this.props.title}</div>\n                        <TextInput\n                            callback={this.updateSearchTerm}\n                            placeholder={this.props.placeholder}\n                            value={this.state.searchTerm}\n                        ></TextInput>\n\n                    </div>\n                    <SelectionPool\n                        callback={this.dropSelection}\n                        items={this.props.selections}\n                    ></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n//import D3Component from \"../../Viz/D3Component\"\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     handles: [],\n        //     range: [{ value: props.min }, { value: props.max }],\n        //     labels: [{ value: props.min }, { value: props.max }]\n        // }\n        this.state ={\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            },\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        };\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            // .range([this.margin.left, this.width - this.margin.right]);\n            .range([this.state.margin.left, this.width - this.state.margin.right]);\n\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function (d) {\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try {\n            this.svg.current.innerHTML = \"\";\n        } catch (e) { }\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6;\n\n        let yCenter = this.state.margin.top + (height - this.state.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        // this.yCenter = yCenter;\n        this.setState({ yCenter })\n        this.handleHeight = handleHeight;\n\n        // for really narrow windows, put the label\n        // top and center\n        // let labelX, labelY, \n        // trackX, trackWidth;\n        // // if (width < 300) {\n        // labelX = el => width / 2 - d3.select(el).node().getBBox().width / 2;\n        // // labelY = _ => 0;//yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // // labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // labelY = el => {\n        //     this.setMargin({ top: d3.select(el).node().getBBox().height })\n        //     // this.margin.top = d3.select(el).node().getBBox().height;\n        //     // yCenter += 4;\n        //     // this.setState({yCenter});\n        //     return d3.select(el).node().getBBox().height;\n        // }\n        let trackX = _ => this.state.margin.left,\n        trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n        // } else {\n        //     this.setMargin({ left: 140 });\n        //     // this.margin.left = 140;\n        //     labelX = el => 145 + 10 - d3.select(el).node().getBBox().width - 2 * handleWidth\n        //     labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        //     trackX = _ => this.state.margin.left;\n        //     trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n\n        // }\n\n        svg.attr(\"height\", height + \"px\");\n\n        // // add label and position it\n        // svg.append(\"text\")\n        //     .classed(\"track-label\", true)\n        //     .text(this.props.label || \"Double Slider\")\n        //     .attr(\"x\", function () { return labelX(this) })\n        //     .attr(\"y\", function () { return labelY(this) });\n        // // .attr(\"x\", function () { return (lpad + 10) - d3.select(this).node().getBBox().width - 2 * handleWidth })\n        // // .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", function () { return trackX(this) })\n            .attr(\"width\", function () { return trackWidth(this) })\n\n            // .attr(\"x\", this.state.margin.left)\n            // .attr(\"width\", width - this.state.margin.left - this.state.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.state.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                <div className=\"track-label\">{this.props.label}</div>\n                <div className=\"track-wrapper\">\n                    {D3Component.prototype.render.call(this)}\n                </div>\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n    render() {\n        let ret=(null);\n        if (!this.props.selections || this.props.selections.length < 1) {\n\n            ret = (\n                <div className=\"unselected-item\">\n                    <div className=\"x-icon\"></div>\n                    <div>\n                    {this.props.hoverText || \" \"}\n                    </div>\n                </div>                \n            )\n        } else {\n            let htext = this.props.hoverText.trim().length > 0 ? this.props.hoverText : this.props.label || \" \";\n            ret = (\n                <div \n                className=\"selected-item\"\n                onClick={this.props.dropCallback}\n                >\n                    <div className=\"x-icon\"></div>\n                    {/* <div>{this.props.label}</div> */}\n                    <div>{htext}</div>\n                </div>\n            )\n        }\n\n        return <div className=\"HoverText\">{ret}</div>\n\n        \n    }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n        \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 0,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        const props = {\n            ...this.props,\n            lazy: true\n        };\n\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { ItemSelector, HoverText } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.label = this.label.bind(this);\n\n    }\n\n\n    label() {\n        if (!this.props.selections || this.props.selections.length < 1) { return \"\" }\n        return this.props.selections[0].label;\n    }\n\n\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.label)\n    }\n\n    handleClick(item) {\n\n        if (this.props.selections\n            && this.props.selections.length > 0\n            && this.props.selections[0].id === item.id) {\n            this.props.updateSelections([])\n        } else {\n            this.props.updateSelections([item])\n        }\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                {/* <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div> */}\n                <HoverText\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    dropCallback={() => { this.props.updateSelections([]) }}\n                    label={this.label()}\n                ></HoverText>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n\n\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n\n        this.setState({\n            searchTerm, \n        })\n\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = this.props.selectionsDict; //arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        // 6-3-19 - updated to expect an array and a dictionary to prevent\n        // the need to use arrayToObject(dict+arr+interviewers)\n        const [items, itemDict] = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items,//: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict,//: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: this.props.selectionsDict,//arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\nimport { HoverText } from \"../../Inputs\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \",\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n        this.label = this.label.bind(this);\n        this.cleanPlaceName = this.cleanPlaceName.bind(this);\n\n        // this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    cleanPlaceName(item){\n        if (!item){ return \"\"}\n        let city = item.label.split(\"|\")[0].split(\",\")[0], \n        country = item.country;\n\n        if(city === country){ return country}\n        if (city && country){ return city + \", \" + country}\n        else if (city){ return city}\n        else if (country){ return country}\n        // return item.label.split(\"|\")[0].split(\",\")[0] + \", \" + item.country\n    }\n    label(){\n        if (!this.props.selections || this.props.selections.length < 1){ return \"\"}\n\n        return this.cleanPlaceName(this.props.selections[0]);\n//        return this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = [];\n\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                // only keep places with a city and country, in theory\n                place => place.label.split(\"|\").filter(x => x && x.length > 0).length === 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n\n                // const element = ret;\n\n                // if (addedCountries.indexOf(country) < 0) { \n                //     addedCountries.push(country);\n                //     const label = `${country}|root`,\n                //         newItem = { label, id: label };\n                //     countryItems.push(newItem)\n                //  }\n\n                return ret\n            });\n\n        // clusterData = clusterData.concat(countryItems);\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|country`, // changed from \"root\" to \"country\"\n                newItem = { label, id: label, country };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"country|\", id: \"country|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n//        return suggestion.label;\n        return this.cleanPlaceName(suggestion);\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value.replace(\":\",\"|\"))) >= 0)\n        // filter out roots\n            .filter(x => x.label.indexOf(\"|root\") < 0)\n            .filter(x => x.label.indexOf(\"root|\") < 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            searchTerm: \"\",\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {this.cleanPlaceName(suggestion)}\n                {/* {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")} */}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: this.cleanPlaceName(d) })\n\n        // this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \", \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    // renderHoverField() {\n    //     if (!this.props.selections || this.props.selections.length < 1) {\n\n    //         return (\n    //             <span>\n    //                 {this.state.hoverText || \" \"}\n    //             </span>\n    //         )\n    //     }\n    //     return (\n    //         <div \n    //         className=\"selected-item\"\n    //         onClick={this.dropSelection}\n    //         >\n    //             <div className=\"x-icon\"></div>\n    //             <div>{this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country}</div>\n    //         </div>\n    //     )\n    // }\n\n    placeLabel(){\n\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    // items={this.cleanClusterData()}\n                    // allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n\n                {/* <div className=\"hover-text\">\n                    {this.renderHoverField()}\n                </div> */}\n                <HoverText\n                    dropCallback={this.dropSelection}\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    label={this.label()}\n                ></HoverText>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport wrapResultListItem from \"./ResultListItem\";\nimport \"./style/main.scss\";\nexport default class extends React.Component {\n\n    render() {\n        return (<div className=\"ResultList\">\n            {this.props.items.map((item, idx)=>wrapResultListItem(item, idx))}\n        </div>);\n    }\n\n}","import React from 'react';\n\nexport default function wrapResultListItem(WrappedComponent, key){\n\n    return (\n        <div key={key} className=\"ResultListItem\">\n            {WrappedComponent}\n        </div>\n    )\n    // return class extends React.Component {\n    //     render(){return (\n    //         <div className=\"ResultListItem\">\n    //         </div>\n    //     )}\n    // }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n// import {ResultList} from \"@bit/jakekara.metadash.fortunoff-app\"\nimport { ResultList } from \"../../FortunoffApp\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef();\n\n        this.decideToIncrement = this.decideToIncrement.bind(this);\n\n        // if (this.props.pymChild) {\n        //     this.handlePymScroll = this.handlePymScroll.bind(this);\n        //     this.props.pymChild.onMessage('viewport-iframe-position', this.handlePymScroll);\n        // }\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n\n        // return class extends React.component {\n\n        //     render() {\n\n\n                return (\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={result.link}\n                        key={i}>\n                        <div className=\"result-item-container\">\n                            <div\n                                className={`result-item ${result.birth_years.length > 1 ? \"multiple\" : \"\"}`}>\n                                <div className=\"testimony-name\">\n                                    {result.title}\n                                </div>\n\n                                <div className=\"birth-year\">\n                                    {\n                                        result.birth_years\n                                            .filter(yr => yr)\n                                            .map(yr => (<li className=\"sub-item\" key={`by-${i}`}>{yr}</li>))\n                                            .concat(result.birth_place_cities\n                                                .filter((_, i) => result.birth_place_cities[i] || result.birth_place_countries[i])\n                                                .map((city, i) => (\n                                                    <li className=\"sub-item\" key={`bp-${i}`}>\n                                                        {city}{city && result.birth_place_countries[i] ? \", \" : \"\"}{result.birth_place_countries[i]}\n                                                    </li>\n                                                )\n                                                )\n\n                                            )\n                                            .slice(-2) // don't show more than two items\n\n                                    }\n\n                                </div>\n                                <div className=\"affiliate\">\n                                    {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                                </div>\n                                <div className=\"recording-year\">\n                                    {getRecordingYear(result)}\n                                </div>\n\n                                <div className=\"big-button-container\">\n                                    <div className=\"big-button\">View</div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </a>\n                )\n\n        //     }\n        // }\n    }\n\n    handlePymScroll(parentInfo) {\n        // this.props.pymChild.sendMessage(\n        //     \"console-log\",\n        //     parentInfo.split(\" \").map(x => Number(x))\n        // );\n        // parentInfo contains in order\n        // Viewport width and height.\n        // Iframe top, left, bottom and right positions.\n\n        const arr = parentInfo.split(\" \").map(x => Number(x)),\n            vheight = arr[1],\n            ibottom = arr[4],\n            distanceFromBottom = ibottom - vheight;\n\n        this.decideToIncrement(distanceFromBottom);\n    }\n\n    decideToIncrement(distanceFromBottom) {\n        // this.props.pymChild.sendMessage(\"console-log\", distanceFromBottom);\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        this.decideToIncrement(distanceFromBottom);\n\n        // if (this.props.results.length > this.state.limit\n        //     && distanceFromBottom < 100) {\n        //     this.setState({ limit: this.state.limit + this.state.increment })\n        // }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    \n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    \n                </div>\n                {/* {this.props.results.slice(0, this.state.limit).map(this.renderResult)} */}\n                <ResultList\n                    items={this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                ></ResultList>\n\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// import { TagFilter, RangeSlider } from '../Inputs';\n// import { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\nimport pym from \"pym.js\";\n\nimport \"./style/main.scss\";\n\nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n        this.pymChild = new pym.Child({ polling: 50});\n\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).forEach(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        selectionsDict={arrayToObject(this.state.filters.interviewers)} // TODO - improve efficiency\n                        // allInterviewers={ data.interviewers.search() } // TODO - improve efficiency\n                        filterItems={t => {\n                            // 6-3-19 - just updated to return both an array and a dictionary\n                            // so it doesn't have to be retouched later on. (dict+arr+interviewers)\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            let retDict = {}\n                            let retArr = results\n                            .filter(i => i.id in this.state.summaryData.interviewers)\n                            .map(i => { \n                                const retItem = { ...i, count: this.state.summaryData.interviewers[i.id].count }\n                                retDict[i.id] = retItem;\n                                return retItem;\n                             })\n\n                            return [retArr, retDict];\n                            // return results\n                            //     .filter(i => i.id in this.state.summaryData.interviewers)\n                            //     .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        pymChild={this.pymChild}\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\n\nconst yaleLogoImgData = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGOGCHvlwAAA/5JREFUaAXtmP1x2kAQxeNM/o9KUCoIHVjugFQQpQKTChRXgFMBpALcgZQKIBWIDkwHzu+JO3tHn2CQR4P1Zp52b3dv7/ZWEhqunp6ePrwnfHxPxarWseBL7/jY4bHDF3YC4y19YQ2tlDN2uHIkF2YYO3xhDa2UM3a4ciQXZhg7fGENrZTzqWIZjiFiK9dQMoN38GRcDegfj4BqbmHkiCiw4XoDd/vhaVc9wynU/zxdjIgpo2uOch8KFSyUC3uosRWBr7qowzCEc1jGCsMEKqaJAb4YPkJBcgZlb5rTZbd7SU7IU1nHv6W3nNZPR3twsm+soUZXR9QFD91+91D21+KUua1r+oJ9kDaa+QFyBkMzblLnOAL4C27gYFEuWBv9UdrtojQuDycYYriFd3DQqCt4y47vza4jdLEJ6q5QPqi9dWDXuoK1RXVqZ/ba1OUpMRF8gBkcPJo+PFSsXmK+0BA9hktooe4qtqu7E2Ii+Bn+gxnUvHMiJJnW+Qr/wq0jwqDjlZ/i99DPjf2pSZxDP0GV17+zTZG54xrpoVwxbJqX+ECk9KY42SOYQuVcOSIKpFwn8Hn+s2KNRlewRcJAcwKoBdZuXJdngU/QJrx/Vlj2F81XHu+zMtmHFFfp1mf12MVpHzbXhLHyC5IhLObZyU36XLMMNHnhxhGybp4tTIvbmNzNlYih9Xk9kdMhQXq7lVMfgAxrYuy+F95vEzTpAcH+tFCL20dyAevm2Pi8JibF5pGg1OWQ3SNBqYvJXcCqwR85v0QOixxNLy3zlBcvF/sCi3DqhSNbE77hyJqcZ7DH5AhdHr2o6r7ZA+eXCL1+SMGKXcJbqOTCEqroOsie1TnOaLs2uX6jb8y4VT20YCWxBVq9dYGSM2QsnorQJFCxmRm3qscU3JqoxRngm0LdIdLPgei1SZq+tF6bz85TkSv4CL9DPfNf4BaeE+ExyfrqcM4m/EZu0DN4TmQki1xCPc9Lp3eKPjocsWroVt4hM6efU2xMshj94Eelj4LtG1QF94E/paR6dNow885jCranGPkEHTLEL3ooR+gHSJszNvYudUPA0gRF6GsoaREy0GHoHbJfy3+BtEh9sSxgGfrCka/4gjEyLAXqKy2BC5jCObRYM8ih7MqlLzXZPKTLVl5HthSWkWNIoc+xQn+eX05ix8QdjJRIOzdm/GhmS0+gFhb9ZlCLuBlS861dPoucgV3D65orXxnKNYU+rpB9/i+tW2gCBd2Cu0J7ucgXwDrfS9Thms+nGY05+yz48K2+YeQxL6033FZ/S40F93e2w8g8dngYfehvF2OH+zvbYWQeOzyMPvS3i7HD/Z3tMDKPHR5GH/rbxdjh/s52GJnfXYf/Ax099yeWp4N/AAAAAElFTkSuQmCC\"\nconst YaleLogoImage = () => <image x=\"0\" y=\"0\" width=\"42\" height=\"42\" href={`data:image/jpeg;base64,${yaleLogoImgData}`} />\n\n\nconst YaleLogoSVG = () => {\n    return (\n        <svg width=\"41px\" height=\"19px\" viewBox=\"0 0 41 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(-26.000000, -31.000000)\">\n                    <g transform=\"translate(26.000000, 20.000000)\">\n                        <YaleLogoImage></YaleLogoImage>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nconst FortunoffTitleSVG = () => {\n    return (<svg width=\"218px\" height=\"40px\" viewBox=\"0 0 218 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fontFamily=\"YaleNew-Roman, YaleNew\" fontSize=\"19\" fontWeight=\"normal\" line-spacing=\"24\">\n            <g transform=\"translate(-121.000000, -23.000000)\" fill=\"#1098AB\">\n                <text>\n                    <tspan x=\"121\" y=\"38\">Fortunoff Video Archive</tspan>\n                    <tspan x=\"121\" y=\"62\">for Holocaust Testimonies</tspan>\n                </text>\n            </g>\n        </g>\n    </svg>)\n}\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <header className=\"SiteBanner\">\n                <div className=\"site-logo\">\n                    <a alt=\"Yale University Library\" href=\"https://web.library.yale.edu/\"><YaleLogoSVG></YaleLogoSVG></a>\n                </div>\n                <div className=\"site-title\">\n                    <a alt=\"Fortunoff Video Archive for Holocaust Testimonies\" href=\"https://fortunoff.library.yale.edu/\">\n                    <FortunoffTitleSVG></FortunoffTitleSVG>\n                    </a>\n                </div>\n            </header>\n        );\n    }\n}","import React from 'react';\nimport MetaDash from './MetaDash';\nimport SiteBanner from './SiteBanner';\nimport {fortunize} from \"./FortunoffApp\";\n\nfunction App() {\n  const FortunizedApp = fortunize(MetaDash)\n  return (\n    <div className=\"App\">\n      <SiteBanner></SiteBanner>\n      <FortunizedApp></FortunizedApp>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default function fortunize(WrappedApp) {\n\n    return class extends React.Component {\n        render() {\n            return (<div className=\"FortunoffApp\">\n                <WrappedApp></WrappedApp>\n            </div>);\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    // let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.2.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.7.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}