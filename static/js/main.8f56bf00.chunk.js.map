{"version":3,"sources":["Common/index.js","Data/static.js","Data/resources.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/arrayToObject.js","MetaDash/Languages/index.js","Viz/Histogram/index.js","Viz/D3Component/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","Inputs/ChecklistInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Inputs/DoubleSlider/index.js","Inputs/HoverText/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","FortunoffApp/ResultList/index.js","FortunoffApp/ResultList/ResultListItem/index.js","MetaDash/Results/index.js","MetaDash/index.js","SiteBanner/index.js","App.js","FortunoffApp/fortunize.js","serviceWorker.js","index.js","Data/getRecordingYear.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","__webpack_require__","r","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","getRecordingYear","getGender","__all","all","filters","itemField","itemFilters","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","getResources","options","filterBirthPlaces","birthplaces","place","birth_place_cities","birth_place_countries","j","city","country","split","filterBirthPlacesFactory","resourceContainsAllSubjects","gender","dateRanges","recording","recordingYear","birth","birth_years","reduce","curr","next","resourceContainsOnlyPrograms","resourceContainsAllInterviewers","language","query","filter","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","genderString","bind","assertThisInitialized","yearRangeString","languagesString","programString","birthplaceString","men","women","both","react_default","a","createElement","className","arr","join","languageCount","keys","summaryData","languages","numeral","format","affiliateCount","items","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","React","Component","state","Men","Women","Both","menRef","createRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","Error","concat","newState","objectSpread","setState","selections","push","updateSelections","vals","total","label","ref","d3","transition","duration","ease","style","_this2","toggleState","onClick","elem","trackScrolling","poolRef","itemCount","increment","scrollBottom","current","scrollTop","getBoundingClientRect","height","scrollHeight","addEventListener","removeEventListener","width","showBars","subtotal","nextItem","count","showAll","allItems","sort","b","slice","map","itemDict","val","barWidth","handleItemClick","key","renderBar","objectToArray","obj","arrayToObject","forEach","listProps","CountListWithBars_default","initializeChart","updateChart","svg","html","selectAll","remove","xAxisG","append","classed","yAxisG","barG","data","node","yearRange","minYear","maxYear","countRange","x","margin","xScale","domain","apply","padding","rangeRound","left","right","tickSteps","tickValues","xAxis","tickFormat","e","attr","bottom","yScale","top","yAxis","tickSizeOuter","ticks","Math","floor","undefined","ty","t","enter","barClass","bandwidth","update","exit","window","on","redrawChart","D3Component","setMargin","currentWidth","newMargin","_this3","newWidth","document","body","clearTimeout","timeout","setTimeout","PureComponent","h","children","size","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","mouseInCallback","mouseOutCallback","clickCallback","prevProps","prevState","min","arr1","arr2","allItemsMatch","root","parentId","packLayout","Number","allowInteraction","y","onMouseOver","onMouseOut","each","handle","newRadius","currentRadius","random","callback","updateValue","target","value","onChange","placeholder","type","handleClick","SelectionPooltem_default","data-value","TagPoolItem_default","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","newSelections","selectionItem","toConsumableArray","dropID","String","filterItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","handles","range","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","handleWidth","invert","round","select","text","xValues","render","innerHTML","bbox","handleHeight","trackHeight","yCenter","handleGroups","raise","yr","getBBox","oldProps","newData","legitArray","get","prototype","arrsMatch","hoverText","htext","dropCallback","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","lazy","TagFilter_default","setText","handleMouseIn","handleMouseOut","TreeMap_default","HoverText_default","ItemSelector_default","arguments","selectionsDict","selectionsWithoutCurrentItem","_this$props$filterIte","_this$props$filterIte2","slicedToArray","allInterviewers","getSuggestions","cleanClusterData","replace","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","cleanPlaceName","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","react_autosuggest_dist_default","idx","WrappedComponent","limit","renderResult","resultsRef","decideToIncrement","result","rel","href","link","_","parentInfo","vheight","distanceFromBottom","results","pageYOffset","innerHeight","offsetHeight","ResultList_default","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","pymChild","pym","Child","polling","_data$getData","resources","console","log","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","birthYears","yrs","recordingYears","BirthPlaces_default","Interviewers_default","search","retDict","retItem","Programs_default","SubjectHeadings_default","Results_default","YaleLogoImage","YaleLogoSVG","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","SiteBanner_YaleLogoImage","FortunoffTitleSVG","fontFamily","fontSize","fontWeight","line-spacing","alt","SiteBanner_YaleLogoSVG","SiteBanner_FortunoffTitleSVG","App","WrappedApp","FortunizedApp","MetaDash","_React$Component","_class","inherits","createClass","SiteBanner_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","record","recording_dates","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"ogBAAA,IAAIA,EAAYC,EAAQ,KAexBC,EAAOC,QAAU,CACbC,gBAdJ,SAAyBC,GACrB,OAAOL,GAAWK,GAAM,IAAIC,cAAcC,SAc1CC,YAVJ,SAAqBC,EAASC,GAC1B,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAKH,EACVE,EAAID,EAAOE,IAAMH,EAAQG,GAE7B,OAAOD,4DCZXE,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,kCAAAG,IAAA,IAAMD,EAAc,kBAChBC,EAAgB,kj8oICDZC,EAAqBlB,EAAQ,IAA7BkB,iBACAf,EAAoBH,EAAQ,IAA5BG,gBACAgB,EAAcnB,EAAQ,IAAtBmB,UAOFC,EAAQpB,EAAQ,KAChBqB,EAAM,kBAAMD,GAEdE,EAAU,CAEdA,yBAAmC,SAACC,EAAWC,GAC3C,OAAO,SAAAX,GACH,IAAK,IAAIY,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IAAK,CACzC,IAAIE,EAAOH,EAAYC,GACvB,GAAIZ,EAAEU,GAAWK,QAAQD,EAAKE,IAAM,EAAG,OAAO,EAElD,OAAO,IAIfP,4BAAsC,SAAAQ,GAAc,OAAOR,EAAQS,yBAAyB,eAAgBD,IAE5GR,gCAA0C,SAAAU,GAAkB,OAAOV,EAAQS,yBAAyB,eAAgBC,IAEpHV,4BAAsC,SAAAW,GAAc,OAAOX,EAAQS,yBAAyB,WAAYE,IAExGX,6BAAuC,SAAAW,GACnC,OAAO,SAAApB,GACH,OAAIoB,EAASP,OAAS,KAClBb,EAAEoB,SAASP,OAAS,GAAKb,EAAEoB,SAASP,OAAS,IAC7Cb,EAAEoB,SAAS,KAAOA,EAAS,GAAGJ,MA0C1CP,EAAQY,aAAe,SAAAC,GAEnB,IAAIC,EArCuB,SAAAD,GAE3B,OAAKA,IACGA,EAAQE,cACRF,EAAQE,aAAe,IAAIX,OAAS,EAC7B,kBAAM,GAGd,SAAAb,GACH,IAAIyB,EAAQH,EAAQE,YAAY,GAGhC,IAAKxB,EAAE0B,oBAAsB,IAAIb,UAAYb,EAAE2B,uBAAyB,IAAId,OAAU,OAAO,EAE7F,IAAK,IAAIe,EAAI,EAAGA,GAAK5B,EAAE0B,oBAAsB,IAAIb,OAAQe,IAAK,CAE1D,IAAIC,EAAO7B,EAAE0B,mBAAmBE,GAC5BE,EAAU9B,EAAE2B,sBAAsBC,GAEtC,OAAItC,EAAgBwC,KAAaxC,EAAgBmC,EAAMK,YAEnDL,EAAMI,MAGFvC,EAAgBuC,KAAUvC,EAAgBmC,EAAMI,KAAKE,MAAM,KAAK,KAM5E,OAAO,GAOaC,CAAyBV,GAEjD,OAAKA,EAaE,SAAAtB,GAGH,IAAKS,EAAQwB,4BAA4BX,EAAQL,UAAY,GAAxDR,CAA4DT,GAAM,OAAO,EAG9E,MAAKsB,EAAQY,QAAU,IAAIrB,OAAS,IAAMS,EAAQY,QAAU,IAAIrB,OAAS,GACjES,EAAQY,OAAOnB,QAAQT,EAAUN,IAAM,GAD/C,CAKA,GAAIsB,EAAQa,YACLb,EAAQa,WAAWC,UAAW,CACjC,IAAMC,EAAgBhC,EAAiBL,GACvC,GAAIqC,EAAgBf,EAAQa,WAAWC,UAAU,IAC1CC,EAAgBf,EAAQa,WAAWC,UAAU,KAC5CC,EAAiB,OAAO,EAOpC,GAAIf,EAAQa,YAAcb,EAAQa,WAAWG,MAEzC,KADmBtC,EAAEuC,aAAe,IACpBC,OAAO,SAACC,EAAMC,GAC1B,QAAKD,KACAnB,KACAA,EAAQa,cACRb,EAAQa,WAAWG,SACpBI,EAAOpB,EAAQa,WAAWG,MAAM,IAAMI,EAAOpB,EAAQa,WAAWG,MAAM,SAE3E,GAAS,OAAO,EAMvB,QAAMf,EAAkBvB,OAuBnBS,EAAQkC,6BAA6BrB,EAAQF,UAAY,GAAzDX,CAA6DT,OAG7DS,EAAQmC,gCAAgCtB,EAAQH,cAAgB,GAAhEV,CAAoET,MAGrEsB,EAAQuB,UACuB,IAA5BvB,EAAQuB,SAAShC,QACjBb,EAAE6C,WAAavB,EAAQuB,SAAS,GAAG7B,QAlFvBR,GAmH3BpB,EAAOC,QAAU,CAAEmB,MAAKsC,MALxB,SAAexB,GACX,OAAKA,EACEd,IAAMuC,OAAOtC,EAAQY,aAAaC,IADnBd,+NCxLtB,SAAAwC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKU,gBAAkBV,EAAKU,gBAAgBF,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKW,gBAAkBX,EAAKW,gBAAgBH,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKY,cAAgBZ,EAAKY,cAAcJ,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKa,iBAAmBb,EAAKa,iBAAiBL,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAPTA,8EAYf,GAAIG,KAAKJ,MAAMxC,QAAQyB,OAAOrB,OAAS,EAAK,MAAO,gBACnD,IAAMmD,EAAMX,KAAKJ,MAAMxC,QAAQyB,OAAOnB,QAAQ,QAAU,EACpDkD,EAAQZ,KAAKJ,MAAMxC,QAAQyB,OAAOnB,QAAQ,UAAY,EACtDmD,EAAOb,KAAKJ,MAAMxC,QAAQyB,OAAOnB,QAAQ,SAAW,EAEpDxB,EAAO,SAMX,OALIyE,GAAOC,EAAS1E,EAAO,gBAClByE,EAAOzE,EAAO,MACd0E,EAAS1E,EAAO,QAChB2E,IAAQ3E,EAAO,qCAGpB4E,EAAAC,EAAAC,cAAA,kBACOF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQ/E,4CAMvBgF,GAEZ,OAAKA,EAGDA,EAAI,KAAOA,EAAI,GACPJ,EAAAC,EAAAC,cAAA,kBACDF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQC,EAAI,KAI/BJ,EAAAC,EAAAC,cAAA,uBACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQC,EAAIC,KAAK,WAVzB,gDAiBpB,OAAQ,+CAoBR,IAAMC,EAAgBtB,OAAOuB,KAAKrB,KAAKJ,MAAM0B,YAAYC,WAAW/D,OACpE,OACIsD,EAAAC,EAAAC,cAAA,sBACWF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQO,IAAQJ,GAAeK,OAAO,OAAtD,IAA+DL,EAAgB,EAAI,YAAc,qDAMhH,IAAMM,EAAiB5B,OAAOuB,KAAKrB,KAAKJ,MAAM0B,YAAYvD,UAAUP,OACpE,OACIsD,EAAAC,EAAAC,cAAA,kBACOF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQO,IAAQE,GAAgBD,OAAO,OAAvD,IAAgEC,EAAiB,EAAI,oBAAsB,uDActH,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,sCAEMH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQO,IAAQxB,KAAKJ,MAAM+B,MAAMnE,QAAQiE,OAAO,OAAhE,gBAFN,OAGWzB,KAAKI,eAHhB,YAIgBJ,KAAKO,gBAAgBP,KAAKJ,MAAMxC,QAAQ0B,WAAWG,OAAS,CAACe,KAAKJ,MAAMgC,UAAW5B,KAAKJ,MAAMiC,YAJ9G,OAKW7B,KAAKU,mBALhB,4BAMgCV,KAAKO,gBAAgBP,KAAKJ,MAAMxC,QAAQ0B,WAAWC,WAAa,CAACiB,KAAKJ,MAAMkC,cAAe9B,KAAKJ,MAAMmC,gBANtI,OAOW/B,KAAKQ,kBAPhB,OAQWR,KAAKS,gBARhB,YAnGiBuB,IAAMC,yCCE/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDsC,MAAQ,CACTC,KAAO,EACPC,OAAS,EACTC,MAAQ,GAGZxC,EAAKyC,OAASN,IAAMO,YACpB1C,EAAK2C,QAAUR,IAAMO,YACrB1C,EAAK4C,SAAWT,IAAMO,YAEtB1C,EAAK6C,aAAe7C,EAAK6C,aAAarC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK8C,QAAU9C,EAAK8C,QAAQtC,KAAbP,OAAAQ,EAAA,EAAAR,CAAAD,IAbAA,4EAiBNhB,GAET,IACI+D,GADM5C,KAAKkC,MAAMrD,GAGjBgE,GAAW,EAIf,OAAQhE,GACJ,IAAK,MACDgE,EAAW7C,KAAKkC,MAAME,OAASpC,KAAKkC,MAAMG,KAC1C,MACJ,IAAK,QACDQ,EAAW7C,KAAKkC,MAAMC,KAAOnC,KAAKkC,MAAMG,KACxC,MACJ,IAAK,OACDQ,EAAW7C,KAAKkC,MAAMC,KAAOnC,KAAKkC,MAAME,MACxC,MACJ,QACI,MAAM,IAAIU,MAAJ,yBAAAC,OAAmClE,IAIjD,GAAKgE,GAAaD,EAAlB,CAEA,IAAMI,EAAQlD,OAAAmD,EAAA,EAAAnD,CAAA,GAAQE,KAAKkC,OAC3Bc,EAASnE,GAAU+D,EACnB5C,KAAKkD,SAASF,GAEd,IAAIG,EAAa,GACbH,EAASb,KAAKgB,EAAWC,KAAK,OAC9BJ,EAASZ,OAAOe,EAAWC,KAAK,SAChCJ,EAASX,MAAMc,EAAWC,KAAK,QAEnCpD,KAAKJ,MAAMyD,iBAAiBF,sCAO5B,IAAMG,EAAO,CACT3C,IAAKX,KAAKJ,MAAMe,KAAO,EACvBC,MAAOZ,KAAKJ,MAAMgB,OAAS,EAC3BC,KAAMb,KAAKJ,MAAMiB,MAAQ,GAEzB0C,EAAQD,EAAK3C,IAAM2C,EAAK1C,MAAQ0C,EAAKzC,KAEnC8B,EAAU,SAACa,EAAOC,GAAR,OACZC,SAAUD,GACLE,aACAC,SAAS,KACTC,KAAKH,cACLI,MAAM,QAAS,kBAAqB,IAAdR,EAAKE,GAAeD,EAAS,OAE5DZ,EAAQ,OAAQ3C,KAAKwC,SACrBG,EAAQ,MAAO3C,KAAKsC,QACpBK,EAAQ,QAAS3C,KAAKyC,sDAIJzC,KAAK2C,uDACJ3C,KAAK2C,2CAEnB,IAAAoB,EAAA/D,KACCW,EAAMX,KAAKJ,MAAMe,KAAO,EAC1BC,EAAQZ,KAAKJ,MAAMgB,OAAS,EAC5BC,EAAOb,KAAKJ,MAAMiB,MAAQ,EAC1B0C,EAAQ5C,EAAME,EAAOD,EAEnBoD,EAAc,SAAAR,GAAK,OAAIO,EAAK7B,MAAMsB,GAAS,KAAO,OAExD,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaO,IAAQb,EAAM4C,GAAO9B,OAAO,OACxDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaO,IAAQX,EAAO0C,GAAO9B,OAAO,OAEzDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaO,IAAQZ,EAAQ2C,GAAO9B,OAAO,QAK9DX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,QAEjCe,IAAK,SAACS,GAAWH,EAAKzB,OAAS4B,GAE/BjD,UAAS,kBAAA8B,OAAoBiB,EAAY,UAC7ClD,EAAAC,EAAAC,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,SAEjCe,IAAK,SAACS,GAAWH,EAAKvB,QAAU0B,GAEhCjD,UAAS,mBAAA8B,OAAqBiB,EAAY,WAC9ClD,EAAAC,EAAAC,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,UAEjCe,IAAK,SAACS,GAAWH,EAAKtB,SAAWyB,GAEjCjD,UAAS,oBAAA8B,OAAsBiB,EAAY,aAEnDlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OACIC,UAAW,8BAAgC+C,EAAY,OACvDC,QAAS,kBAAMF,EAAKrB,aAAa,SAGjC5B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,IAAQb,GAAKc,OAAO,SAGlDX,EAAAC,EAAAC,cAAA,OACIC,UAAW,+BAAiC+C,EAAY,QACxDC,QAAS,kBAAMF,EAAKrB,aAAa,UAGjC5B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,IAAQX,GAAMY,OAAO,SAInDX,EAAAC,EAAAC,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,UACjCzB,UAAW,gCAAkC+C,EAAY,UAGzDlD,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,IAAQZ,GAAOa,OAAO,kBAtJ3CO,IAAMC,wCCC/B,SAAAtC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDuE,eAAiBtE,EAAKsE,eAAe9D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKuE,QAAUpC,IAAMO,YAErB1C,EAAKqC,MAAQ,CACTmC,UAAU,IACVC,UAAW,IAPDzE,gFAcd,KAAIG,KAAKkC,MAAMmC,WAAarE,KAAKJ,MAAM+B,OAAvC,CAEA,IACM4C,EADYvE,KAAKoE,QAAQI,QAAQC,UACNzE,KAAKoE,QAAQI,QAAQE,wBAAwBC,OAS9E,GARoB3E,KAAKoE,QAAQI,QAAQI,aAQtBL,GAAiB,GAAG,CAGnC,IAAMF,EAAYrE,KAAKkC,MAAMmC,UAAYrE,KAAKkC,MAAMoC,UACpDtE,KAAKkD,SAAS,CAACmB,4DAMnBrE,KAAKoE,QAAQI,QAAQK,iBAAiB,SAAU7E,KAAKmE,+DAIrDnE,KAAKoE,QAAQI,QAAQM,oBAAoB,SAAU9E,KAAKmE,kDAIlDY,GACN,GAAK/E,KAAKJ,MAAMoF,SAChB,OACIlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAK8C,MAAO,CAAEiB,MAASA,GAAS9D,UAAU,8CAM7C,IAAA8C,EAAA/D,KAECuD,EAAQvD,KAAKJ,MAAM+B,MAAMxC,OAAO,SAAC8F,EAAUC,GAAX,OAAwBD,EAAWC,EAASC,OAAO,GAGnFxD,EAAQ3B,KAAKJ,MAAMwF,QAAUpF,KAAKJ,MAAMyF,SAAWrF,KAAKJ,MAAM+B,MACpE,OACIb,EAAAC,EAAAC,cAAA,OACAyC,IAAKzD,KAAKoE,QACVnD,UAAU,eACJU,GAAS,IACN2D,KAAK,SAACvE,EAAGwE,GAAJ,OAAUxE,EAAEoE,MAAQI,EAAEJ,MAAQ,GAAK,IACxCK,MAAM,EAAExF,KAAKkC,MAAMmC,WAEnBoB,IAAI,SAAChI,EAAMF,GAGR,OAAME,EAAK+F,OAAS/F,EAAK+F,MAAMhG,OAAS,GAOpCC,EAAKE,MAAMoG,EAAKnE,MAAM8F,UACtBzE,EAAY,YACZoD,EAAY7C,IAAQuC,EAAKnE,MAAM8F,SAASjI,EAAKE,IAAIwH,OAAO1D,OAAO,OAvBrEkE,EAwBuB5B,EAAKnE,MAAM8F,SAASjI,EAAKE,IAAIwH,MAA9CS,EAxBH,GAAA7C,OAAa,IAAN4C,EAAYpC,EAAnB,OA2BGtC,EAAY,qBACZ2E,EAAW,EACXvB,EAAY,MAGZ5G,EAAKE,MAAMoG,EAAKnE,MAAMuD,aACtBlC,EAAY,sBAKZH,EAAAC,EAAAC,cAAA,OAAKiD,QAAS,kBAAOF,EAAKnE,MAAMiG,iBAAoB,cAAYpI,IAAOqI,IAAKvI,EACxE0D,UAAWA,GAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVxD,EAAK+F,OAGTO,EAAKgC,UAAUH,GAEhB9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVoD,KApCwC,KAErD,IAAIA,EACAuB,EACA3E,EAlBN0E,YA3DO3D,IAAMC,YCJpB+D,SAAA,SAAUC,GAErB,OADAA,EAAMA,GAAO,GACNnG,OAAOuB,KAAK4E,GAAKR,IAAI,SAAAhJ,GAAC,OAAEwJ,EAAIxJ,OCFxByJ,EAAA,SAAUhF,GACrB,IAAI+E,EAAM,GAEV,OADA/E,EAAIiF,QAAQ,SAAA1I,GAAI,OAAEwI,EAAIxI,EAAKE,IAAMF,IAC1BwI,sLCGE,IAAApG,EAAAG,KAECoG,EAAStG,OAAAmD,EAAA,EAAAnD,CAAA,GACRE,KAAKJ,MADG,CAEXiG,gBAAiB,SAAApI,GAEwB,IAAjCoC,EAAKD,MAAMuD,WAAW3F,QAAgBC,EAAKE,KAAOkC,EAAKD,MAAMuD,WAAW,GAAGxF,GAAMkC,EAAKD,MAAMyD,iBAAiB,CAAC5F,IAC3GoC,EAAKD,MAAMyD,iBAAiB,KAEvC+B,SAAS,EACTjC,WAAY+C,EAAclG,KAAKJ,MAAMuD,YACrC6B,UAAU,IAId,OACIlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,aACAH,EAAAC,EAAAC,cAACqF,EACOD,WApBKpE,IAAMC,mDCI/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFASf,IAAM2G,EAAM9C,SAAU1D,KAAKwG,KAAKC,KAAK,IACrCD,EAAIE,UAAU,KAAKC,SAEnB3G,KAAK4G,OAASJ,EAAIK,OAAO,KACpBC,QAAQ,QAAQ,GAChBA,QAAQ,KAAK,GAElB9G,KAAK+G,OAASP,EAAIK,OAAO,KACpBC,QAAQ,QAAQ,GAChBA,QAAQ,KAAK,GAElB9G,KAAKgH,KAAOR,EAAIK,OAAO,yCAIfI,GAGRA,EAAOA,GAAQjH,KAAKJ,MAAMqH,KAC1B,IAAMT,EAAM9C,SAAU1D,KAAKwG,KAGrBzB,EAAQyB,EAAIU,OAAOxC,wBAAwBK,MAC7CJ,EAAS3E,KAAKJ,MAAM+E,QAAU6B,EAAIU,OAAOxC,wBAAwBC,OAM/DwC,EAAY,CAACnH,KAAKJ,MAAMwH,QAASpH,KAAKJ,MAAMyH,SAC5CC,EAAa,CAAC,EAAG5D,MAAOuD,EAAKxB,IAAI,SAAA8B,GAAC,OAAIA,EAAEpC,UAAW,GAQnDqC,EAASxH,KAAKkC,MAAMsF,OAGpBC,EAAS/D,cACVgE,OAAOhE,QAAAiE,MAAAjE,EAAYyD,IACnBS,QAAQ,IACRC,WAAW,CAACL,EAAOM,KAAM/C,EAAQyC,EAAOO,QAEvCC,EAAYjD,EAAQ,IAAM,GAAK,GAC/BkD,EAAavE,QAAS1D,KAAKJ,MAAMwH,QAASpH,KAAKJ,MAAMyH,QAASW,GAG9DE,EAAQxE,aAAc+D,GACvBU,WAAW,SAAAC,GAAC,OAAI5G,IAAQ4G,GAAG3G,OAAO,OAClCwG,WAAWA,GAEhBjI,KAAK4G,OACAyB,KAAK,YADV,aAAAtF,OACoC,EADpC,IACyC4B,EAAS6C,EAAOc,OADzD,MAEKnI,KAAK+H,GAEV,IAAMK,EAAS7E,gBACVgE,OAAOJ,GACPO,WAAW,CAAClD,EAAS6C,EAAOc,OAAQd,EAAOgB,MAE1CC,EAAQ/E,WAAY6E,GAAQG,cAAc,GAE3CC,MAAMhE,EAAS,IACfwD,WAAW,SAAAC,GAAC,OAAIQ,KAAKC,MAAMT,KAAOA,EAAIA,OAAIU,IAEzCC,EAAKrF,eAAgBE,SAAS,KAAMC,KAAKH,cAE/C1D,KAAK+G,OACAsB,KAAK,YADV,aAAAtF,OACoCyE,EAAOM,KAD3C,IACmD,EADnD,MAEKnE,WAAWoF,GACX5I,KAAKsI,GAEV,IAAMO,EAAI,SAAAzL,GAAC,OAAIiJ,EAAI7C,aACdC,SAAS,KACTC,KAAKH,cAEV1D,KAAKgH,KAAKN,UAAU,QACfO,KAAKA,GACL9F,KACG,SAAC8H,EAAO1L,GAAR,OAAc0L,EAAMpC,OAAO,QACtBwB,KAAK,QAAS,SAAAxL,GAAC,OAAIA,EAAEqM,WACrBpC,QAAQ,OAAO,GACfuB,KAAK,mBAAoB,SAAAxL,GAAC,OAAIA,EAAEsI,QAChCkD,KAAK,aAAc,SAAAxL,GAAC,OAAIA,EAAE2G,QAC1B6E,KAAK,IAAK,SAAAxL,GAAC,OAAI0L,EAAO,KACtBF,KAAK,QAASZ,EAAO0B,WACrBd,KAAK,IAAK,SAAAxL,GAAC,OAAI4K,EAAO5K,EAAE2G,SACxBrD,KAAK,SAAA8I,GAAK,OAAIA,EAAMtF,WAAW,MAC3B0E,KAAK,IAAK,SAAAxL,GAAC,OAAI0L,EAAO1L,EAAEsI,OAAS,KACjCkD,KAAK,SAAU,SAAAxL,GAAC,OAAI0L,EAAO,GAAKA,EAAO1L,EAAEsI,OAAS,KAClDkD,KAAK,QAASZ,EAAO0B,cAE9B,SAAAC,GAAM,OAAIA,EACLf,KAAK,oBAAqB,SAAAxL,GAAC,OAAIA,EAAEsI,QACjCkD,KAAK,QAAS,SAAAxL,GAAC,OAAIA,EAAEqM,WACrBpC,QAAQ,OAAO,GACfuB,KAAK,IAAK,SAAAxL,GAAC,OAAI4K,EAAO5K,EAAE2G,SACxBrD,KAAK,SAAAiJ,GAAM,OAAIA,EAAOzF,WAAWqF,KAC7BX,KAAK,IAAK,SAAAxL,GAAC,OAAI0L,EAAO1L,EAAEsI,OAAS,KACjCkD,KAAK,SAAU,SAAAxL,GAAC,OAAI0L,EAAO,GAAKA,EAAO1L,EAAEsI,OAAS,QAE3D,SAAAkE,GAAI,OAAIA,EACHhB,KAAK,kBAAmB,SAAAxL,GAAC,OAAIA,EAAEsI,QAE/BkD,KAAK,IAAK,SAAAxL,GAAC,OAAI4K,EAAO5K,EAAE2G,SACxBrD,KAAK,SAAAkJ,GAAI,OAAIA,EAAK1F,WAAWqF,KACzBX,KAAK,SAAU,GACfA,KAAK,IAAK,kBAAME,EAAO,SAIxC7E,SAAU4F,QAAQC,GAAG,mBAAoBvJ,KAAKwJ,YAAYnJ,KAAKL,cA5H1CyJ,2BCHzB,SAAA9J,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED4G,IAAMxE,IAAMO,YACjB1C,EAAKyG,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK2J,YAAc3J,EAAK2J,YAAYnJ,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK6J,UAAY7J,EAAK6J,UAAUrJ,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IAEjBA,EAAKqC,MAAQ,CACTyH,cAAe,EACfnC,OAAQ5H,EAAM4H,QAAU,CACpBgB,IAAI,EACJV,KAAK,EACLC,MAAM,EACNO,OAAO,IAIfzI,EAAK2H,OAAS5H,EAAM4H,QAAU,CAC1BgB,IAAI,EACJV,KAAK,EACLC,MAAM,EACNO,OAAO,GAvBIzI,yEA4BT+J,GACN,IAAMpC,EAAM1H,OAAAmD,EAAA,EAAAnD,CAAA,GAAOE,KAAKkC,MAAMsF,OAAWoC,GACzC5J,KAAKkD,SAAS,CAAEsE,wDAKhBxH,KAAKuG,YAAYvG,KAAKJ,MAAMqH,kDAI5BjH,KAAKsG,kBACLtG,KAAKuG,+CAIA,IAAAxC,EAAA/D,KACL,OAAOc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAClBH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKyC,IAAK,SAACS,GAAWH,EAAKyC,IAAMtC,4CAI5B,IAAA2F,EAAA7J,KAGH8J,EAAWR,OAAOS,SAASC,KAAKtF,wBAAwBK,MAC1D+E,IAAa9J,KAAKkC,MAAMyH,eAE5B3J,KAAKkD,SAAS,CAACyG,aAAaG,IAG5BG,aAAajK,KAAKkK,SAClBlK,KAAKkK,QAAUC,WAAW,WACtBN,EAAKvD,kBACLuD,EAAKtD,eAEN,qFAQKU,WA3EajF,IAAMoI,8BCK/B,SAAAzK,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFAQf,IAAM2G,EAAM9C,SAAU1D,KAAKwG,KAAKC,KAAK,IACrCD,EAAIE,UAAU,KAAKC,SAEnB,IACIhC,EAAS3E,KAAKJ,MAAM+E,QAAU6B,EAAIU,OAAOxC,wBAAwBC,OAErE6B,EAAI6B,KAAK,SAAU1D,yCAMT,IAAAZ,EAAA/D,KACJwG,EAAM9C,SAAU1D,KAAKwG,KAErBzB,EAAQyB,EAAIU,OAAOxC,wBAAwBK,MAC7CJ,EAAS3E,KAAKJ,MAAM+E,QAAU6B,EAAIU,OAAOxC,wBAAwBC,OAErE6B,EAAI6B,KAAK,SAAU1D,GACnB,IAAM0F,EAAI3G,YAAa,CAAE4G,SAAYtK,KAAKJ,MAAM+B,QAElC+B,YACT6G,KAAK,CAACxF,EAAOJ,IACbiD,QAAQ,EAEb4C,CAAQH,EACHI,IAAI,SAAU5N,GAAK,OAAOA,EAAEsI,QAC5BG,KAAK,SAAUvE,EAAGwE,GAAK,OAAOxE,EAAE4D,OAASY,EAAEZ,QAAUY,EAAEJ,MAAQpE,EAAEoE,SACpEuF,cAIF,IAAMC,EAAgB,SAAAlN,GAClB,IAAMmN,EAAWnN,EAAKwJ,KACtB,SAAKlD,EAAKnE,MAAMuD,YAAcY,EAAKnE,MAAMuD,WAAW3F,OAAS,IACzDoN,EAASjN,KAAOoG,EAAKnE,MAAMuD,WAAW,GAAGxF,IAG3CqL,EAAIxC,EAAI7C,aACTC,SAAS,KACTC,KAAKH,YAEV8C,EAAIE,UAAU,QACTO,KAAKoD,EAAEQ,UACP1J,KACG,SAAA8H,GAAK,OAAIA,EACJpC,OAAO,QACPC,QAAQ,WAAW,GACnBA,QAAQ,cAAe6D,GACvBtC,KAAK,KAAM,SAAUxL,GAAK,OAAOA,EAAEc,KACnCwC,KAAK,SAAA8I,GAAK,OAAIA,EACVZ,KAAK,IAAK,SAAAxL,GAAC,OAAIA,EAAEiO,KACjBzC,KAAK,IAAK,SAAAxL,GAAC,OAAIA,EAAEkO,KACjB1C,KAAK,QAAS,SAAUxL,GAAK,OAAOA,EAAEmO,GAAKnO,EAAEiO,KAC7CzC,KAAK,SAAU,SAAUxL,GAAK,OAAOA,EAAEoO,GAAKpO,EAAEkO,QAQvD,SAAA3B,GAAM,OAAIA,EACLtC,QAAQ,cAAe6D,GACvBtC,KAAK,KAAM,SAAUxL,GAAK,OAAOA,EAAEc,KAEnCwC,KAAK,SAAAiJ,GAAM,OAAIA,EAAOzF,WAAWqF,GAC7BX,KAAK,IAAK,SAAAxL,GAAC,OAAIA,EAAEiO,KACjBzC,KAAK,IAAK,SAAAxL,GAAC,OAAIA,EAAEkO,KACjB1C,KAAK,QAAS,SAAUxL,GAAK,OAAOA,EAAEmO,GAAKnO,EAAEiO,KAC7CzC,KAAK,SAAU,SAAUxL,GAAK,OAAOA,EAAEoO,GAAKpO,EAAEkO,QAEvD,SAAA1B,GAAI,OAAIA,EAAK1C,WAQrBH,EAAIE,UAAU,QACT6C,GAAG,YAAa,SAAA9L,GAAI,OAAIsG,EAAKnE,MAAMsL,gBAAiBzN,EAAKwJ,QACzDsC,GAAG,WAAY,SAAA9L,GAAI,OAAIsG,EAAKnE,MAAMuL,iBAAkB1N,EAAKwJ,QACzDsC,GAAG,QAAS,SAAA9L,GAAI,OAAIsG,EAAKnE,MAAMwL,cAAc3N,EAAKwJ,QAGvDvD,SAAU4F,QAAQC,GAAG,iBAAkBvJ,KAAKwJ,YAAYnJ,KAAKL,cAhGxCyJ,yBCGzB,SAAA9J,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFAQf,IAAM2G,EAAM9C,SAAU1D,KAAKwG,KAAKC,KAAK,IAGjC9B,EAAS3E,KAAKJ,MAAM+E,QAAU6B,EAAIU,OAAOxC,wBAAwBC,OAErE6B,EAAI6B,KAAK,SAAU1D,EAAS,iDAOb0G,EAAWC,GAC1BtL,KAAKuG,YAAY8E,EAAWC,uCAGpBD,EAAWC,GAAW,IAAAvH,EAAA/D,KAExBwG,EAAM9C,SAAU1D,KAAKwG,KAErBzB,EAAQyB,EAAIU,OAAOxC,wBAAwBK,MAC7CJ,EAASiE,KAAK2C,IAAIxG,EACd/E,KAAKJ,MAAM+E,QAAU6B,EAAIU,OAAOxC,wBAAwBC,QAGhE6B,EAAI6B,KAAK,SAAU1D,EAAS,MAG5B,IAAMhD,EAAQ3B,KAAKJ,MAAM+B,MAiBzB,IATA,SAAuB6J,EAAMC,GACzB,GAAID,EAAKhO,SAAWiO,EAAKjO,OAAU,OAAO,EAC1C,IAAK,IAAID,EAAI,EAAGA,EAAIiO,EAAKhO,OAAQD,IAAK,CAClC,GAAIiO,EAAKjO,GAAGI,KAAO8N,EAAKlO,GAAGI,GAAM,OAAO,EACxC,GAAI6N,EAAKjO,GAAG4H,QAAUsG,EAAKlO,GAAG4H,MAAS,OAAO,EAElD,OAAO,EAGPuG,EAOCL,GAAa,CAAE1J,MAAO,KAAMA,MAC7B3B,KAAKJ,MAAM+B,OARf,CAkBA,IAAMgK,EAAOjI,aACR/F,GAAG,SAAAd,GAAC,OAAIA,EAAE2G,MAAM9E,MAAM,KAAK,KAC3BkN,SAAS,SAAA/O,GAAC,OAAIA,EAAE2G,MAAM9E,MAAM,KAAK,IAFzBgF,CAE6B/B,GAEtCkK,EAAanI,SACZkE,QAAQ,MACR2C,KAAK,CAACxF,EAAOJ,IAElBgH,EAAKlB,IAAI,SAAA5N,GAAC,OAAIiP,OAAOjP,EAAEsI,MAAQtI,EAAEsI,MAAQ,KAEzC,IAAM8B,EAAO0E,EAAKjB,cAEbhL,OAAO,SAAA7C,GAAC,OAAIA,EAAEoK,KAAKzD,MAAM9F,QAAQ,YAAc,IAC/CgC,OAAO,SAAA7C,GAAC,OAAIA,EAAEoK,KAAKzD,MAAM9F,QAAQ,YAAc,IAIpDmO,EAAWF,GACXnF,EAAIE,UAAU,eAGd1G,KAAK+L,iBAAmB9E,EAAKzJ,OAQ7B,IAAMb,EAAI,SAAAE,GAAC,OAAIA,EAAEF,GAAK,GAChB4K,EAAI,SAAA1K,GAAC,OAAIA,EAAE0K,GAAK,GAChByE,EAAI,SAAAnP,GAAC,OAAIA,EAAEmP,GAAK,GAEtBxF,EACKE,UAAU,eACVO,KAAKA,GACL9F,KACG,SAAA8H,GAAK,OAAIA,EACJpC,OAAO,UAIPC,QAAQ,QAAQ,GAChByC,GAAG,YAAa,SAAA1M,GAAC,OAAIkH,EAAKnE,MAAMqM,YAAYpP,EAAEoK,QAC9CsC,GAAG,WAAY,SAAA1M,GAAC,OAAIkH,EAAKnE,MAAMsM,WAAWrP,EAAEoK,QAC5CsC,GAAG,QAAS,SAAA1M,GACLkH,EAAKnE,MAAMuD,YACyB,IAAjCY,EAAKnE,MAAMuD,WAAW3F,QACtBuG,EAAKnE,MAAMuD,WAAW,GAAGxF,KAAOd,EAAEoK,KAAKtJ,GAC1CoG,EAAKnE,MAAMyD,iBAAiB,IAE5BU,EAAKnE,MAAMyD,iBAAiB,CAACxG,EAAEoK,SAGtCoB,KAAK,KAAMd,GACXc,KAAK,KAAM2D,GACX3D,KAAK,IAAK1L,IACf,SAAAyM,GAAM,OAAIA,EACLf,KAAK,YAAa,SAAAxL,GAAC,OAAIA,EAAEoK,KAAKzD,QAC9B2I,KAAK,SAAUtP,EAAGU,GAEf,IAAI6O,EAAS1I,SAAU1D,MAAM8D,MAAM,UAAW,OACxCuI,EAAY1P,EAAEE,GACdyP,EAAgB5I,SAAU1D,MAAMqI,KAAK,MAAQ,EAE/CgE,EAAY,GAAKC,EAAgB,GAAKA,IAAkBD,IAExDD,EAASA,EAAOzI,aAAaC,SAAS,IAAOgF,KAAK2D,WAKtDH,EACKtI,MAAM,UAAW,KACjBuE,KAAK,KAAMd,GACXc,KAAK,KAAM2D,GACX3D,KAAK,IAAK1L,MAkBvB,SAAA0M,GAAI,OAAIA,EAAK1C,WAQrBjD,SAAU4F,QAAQC,GAAG,iBAAkBvJ,KAAKwJ,YAAYnJ,KAAKL,0CAMvDoM,EAAQpD,GAEd,OADAoD,EAASA,EAAOzI,WAAWqF,UAtLNS,wBCAAzH,IAAMC,uCCA/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED4M,SAAW3M,EAAKD,MAAM4M,UAAY,aAEvC3M,EAAK4M,YAAc5M,EAAK4M,YAAYpM,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IALJA,2EAQPuI,GACRpI,KAAKwM,SAASpE,EAAEsE,OAAOC,wCAIvB,IAAMA,EAAQ3M,KAAKJ,MAAM+M,OAAS,GAClC,OACI7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SACA4L,SAAU5M,KAAKyM,YACfE,MAAOA,EACPE,YAAa7M,KAAKJ,MAAMiN,YACxBC,KAAK,iBAtBQ9K,IAAMC,kCCC/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDmN,YAAclN,EAAKkN,YAAY1M,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFJA,6EAMfG,KAAKJ,MAAM4M,SAASxM,KAAKJ,MAAMnC,uCAI/B,OACIqD,EAAAC,EAAAC,cAAA,OAAKiD,QAASjE,KAAK+M,YAAa9L,UAAU,qBACtCH,EAAAC,EAAAC,cAAA,WAAMhB,KAAKJ,MAAMnC,KAAK+F,OAD1B,IACuC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAdrCe,IAAMC,uMCGtB,IAAApC,EAAAG,KACL,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACTjB,KAAKJ,MAAM+B,OAAS,IAAI8D,IAAI,SAAChI,EAAKF,GAChC,OAAQuD,EAAAC,EAAAC,cAACgM,EAAD,CAAmBlH,IAAKvI,EAAGiP,SAAU3M,EAAKD,MAAM4M,SAAU/O,KAAMA,cAN/DuE,IAAMC,kCCC/B,SAAAtC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDmN,YAAclN,EAAKkN,YAAY1M,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHLA,6EAOdG,KAAKJ,MAAM4M,SAASxM,KAAKJ,MAAMnC,uCAI/B,OACIqD,EAAAC,EAAAC,cAAA,OAAKiD,QAASjE,KAAK+M,YAAaE,aAAYjN,KAAKJ,MAAMnC,KAAKkP,MAAO1L,UAAU,WAAWjB,KAAKJ,MAAMnC,KAAK+F,cAdvFxB,IAAMC,kCCG/B,SAAAtC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDuE,eAAiBtE,EAAKsE,eAAe9D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKuE,QAAUpC,IAAMO,YAErB1C,EAAKqC,MAAQ,CACTmC,UAAU,IACVC,UAAW,IAPDzE,gFAcd,KAAIG,KAAKkC,MAAMmC,WAAarE,KAAKJ,MAAM+B,QAQ1B,MANK3B,KAAKoE,QAAQI,QAAQC,UACNzE,KAAKoE,QAAQI,QAAQE,wBAAwBC,QAC1D3E,KAAKoE,QAAQI,QAAQE,wBAAwBC,QAI9C,GAAG,CAClB,IAAMN,EAAYrE,KAAKkC,MAAMmC,UAAYrE,KAAKkC,MAAMoC,UACpDtE,KAAKkD,SAAS,CAACmB,2DAMnBrE,KAAKoE,QAAQI,QAAQK,iBAAiB,SAAU7E,KAAKmE,+DAIrDnE,KAAKoE,QAAQI,QAAQM,oBAAoB,SAAU9E,KAAKmE,iDAIpD,IAAAJ,EAAA/D,KACJ,OACIc,EAAAC,EAAAC,cAAA,OACAyC,IAAKzD,KAAKoE,QACVnD,UAAU,YACJjB,KAAKJ,MAAM+B,MAAM6D,MAAM,EAAGxF,KAAKkC,MAAMmC,YAAc,IAAIoB,IAAI,SAAChI,EAAMF,GAChE,OACAuD,EAAAC,EAAAC,cAACkM,EAAD,CACAV,SAAUzI,EAAKnE,MAAM4M,UAAY,aACjC1G,IAAKvI,EACLE,KAAMA,cAlDGuE,IAAMC,0BCK/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAEfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDsC,MAAQ,CACTiL,WAAY,IAGhBtN,EAAKuN,iBAAmBvN,EAAKuN,iBAAiB/M,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKwN,aAAexN,EAAKwN,aAAahN,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKyN,kBAAoBzN,EAAKyN,kBAAkBjN,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IACzBA,EAAK0N,cAAgB1N,EAAK0N,cAAclN,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKwD,iBAAmBxD,EAAKwD,iBAAiBhD,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAZTA,gFAeF2N,GACbxN,KAAKJ,MAAMyD,iBAAiBmK,GAC5BxN,KAAKkD,SAAS,CAAEiK,WAAY,8CAGfnE,GACbhJ,KAAKkD,SAAS,CACViK,WAAYnE,yCAIPyE,GAET,IAAID,EAAa1N,OAAA4N,EAAA,EAAA5N,CAAOE,KAAKJ,MAAMuD,YAC/BqK,EAAc9N,OAAO,SAAAqB,GAAC,OAAIA,EAAEpD,KAAO8P,EAAc9P,KAAIH,OAAS,IAElEgQ,EAAa,GAAAzK,OAAAjD,OAAA4N,EAAA,EAAA5N,CAAO0N,GAAP,CAAsBC,IAEnCzN,KAAKqD,iBAAiBmK,EAAexN,KAAKkC,MAAMiL,uDAGlCQ,GACd,IAAIH,EAAa1N,OAAA4N,EAAA,EAAA5N,CAAOE,KAAKJ,MAAMuD,YACnCqK,EAAgBA,EAAc9N,OAAO,SAAAqB,GAEjC,OADY6M,OAAO7M,EAAEpD,MAAQiQ,OAAOD,KAIxC3N,KAAKqD,iBAAiBmK,EAAexN,KAAKkC,MAAMiL,kDAGtC1P,GACVuC,KAAKsN,kBAAkB7P,EAAKE,qCAGvB,IAAAoG,EAAA/D,KAIC2B,EAAQ3B,KAAKJ,MAAMiO,YAAY7N,KAAKkC,MAAMiL,WAAWzO,MAAM,MAC5DgB,OAAO,SAAAnC,GAAC,OAAIA,EAAEI,MAAMoG,EAAKnE,MAAMyF,WAGpC,OACIvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcjB,KAAKJ,MAAMkO,OACxChN,EAAAC,EAAAC,cAAC+M,EAAD,CACIvB,SAAUxM,KAAKoN,iBACfP,YAAa7M,KAAKJ,MAAMiN,YACxBF,MAAO3M,KAAKkC,MAAMiL,cAI1BrM,EAAAC,EAAAC,cAACgN,EAAD,CACIxB,SAAUxM,KAAKuN,cACf5L,MAAO3B,KAAKJ,MAAMuD,cAI1BrC,EAAAC,EAAAC,cAACiN,EAAD,CACIzB,SAAUxM,KAAKqN,aACf1L,MAAOA,GAAS,aAjFPK,IAAMC,cCJND,IAAMC,6BCE/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDsO,gBAAkBrO,EAAKqO,gBAAgB7N,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKsO,eAAiBtO,EAAKsO,eAAe9N,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHPA,+EAMHpC,GACZuC,KAAKJ,MAAMyD,iBAAiBrD,KAAKJ,MAAM+B,MAAMjC,OAAO,SAAAnC,GAAC,OAAIA,EAAEI,KAAOF,EAAKiP,OAAOC,kDAI9E3M,KAAKJ,MAAMyD,iBAAiB,qCAK5B,IAAM+K,EAAWpO,KAAKJ,MAAMuD,YAA+C,IAAjCnD,KAAKJ,MAAMuD,WAAW3F,OAAewC,KAAKJ,MAAMuD,WAAW,GAAK,CAAExF,GAAI,OAE1G0Q,EAA2B,QAAhBD,EAASzQ,GAAe,QAAU,IAE/C2Q,EAAc,eAIlB,OAHAA,EAAc,iBAAmBD,EAEb,QAAhBD,EAASzQ,KAAgB2Q,GAAe,YAExCxN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,UACIC,UAAWoN,EAAW,iBACtBE,aAAcH,EAASI,GACvB5B,SAAU5M,KAAKkO,iBACfpN,EAAAC,EAAAC,cAAA,UACIiD,QAASjE,KAAKmO,eACdxB,MAAM,OACR3M,KAAKJ,MAAMiN,aAAe,aAE3B7M,KAAKJ,MAAM+B,MAAM8D,IAAI,SAAChI,EAAMF,GACzB,IAAMkR,EAAc,CAEhB9B,MAAOlP,EAAKE,IAEhB,OACImD,EAAAC,EAAAC,cAAA,SAAAlB,OAAA4O,OAAA,CACI5I,IAAKvI,GACDkR,GAAchR,EAAK+F,UAKvC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAYqN,EAAarK,QAASjE,KAAKmO,yBAnD1CnM,IAAMC,0CCK/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAODsC,MAAO,CACRsF,OAAQ5H,EAAM4H,QAAU,CACpBgB,IAAI,EACJV,KAAK,EACLC,MAAM,EACNO,OAAO,GAEXqG,QAAS,GACTC,MAAO,CAAC,CAAEjC,MAAO/M,EAAM2L,KAAO,CAAEoB,MAAO/M,EAAMiP,MAC7CC,OAAQ,CAAC,CAAEnC,MAAO/M,EAAM2L,KAAO,CAAEoB,MAAO/M,EAAMiP,OAGlDhP,EAAKkP,MAAQlP,EAAKkP,MAAM1O,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IACbA,EAAKmP,SAAWnP,EAAKmP,SAAS3O,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKoP,SAAWpP,EAAKoP,SAAS5O,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKqP,WAAarP,EAAKqP,WAAW7O,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKsP,OAAStP,EAAKsP,OAAO9O,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IACdA,EAAKuP,eAAiBvP,EAAKuP,eAAe/O,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKwP,aAAexP,EAAKwP,aAAahP,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKyP,YAAczP,EAAKyP,YAAYjP,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK0P,qBAAuB1P,EAAK0P,qBAAqBlP,KAA1BP,OAAAQ,EAAA,EAAAR,CAAAD,IAE5BA,EAAK2P,kBAAoB3P,EAAK2P,kBAAkBnP,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IA9BVA,uEAmCf,OAAO6D,gBACFgE,OAAO,CAAC1H,KAAKJ,MAAM2L,IAAKvL,KAAKJ,MAAMiP,MAEnCD,MAAM,CAAC5O,KAAKkC,MAAMsF,OAAOM,KAAM9H,KAAK+E,MAAQ/E,KAAKkC,MAAMsF,OAAOO,yCAI9DpC,GACL,OAAO3F,KAAK+O,OAAL/O,CAAa2F,GAAO3F,KAAKyP,YAAc,mCAGzClI,GACL,OAAOvH,KAAK+O,QAAQW,OAAOnI,EAAIvH,KAAKyP,YAAc,sCAG3C9C,GACP,OAAO/D,KAAKiG,IAAI7O,KAAKJ,MAAM2L,IAAK3C,KAAK2C,IAAIvL,KAAKJ,MAAMiP,IAAKlC,mCAGtDpF,GACH,OAAOvH,KAAKgP,SAAShP,KAAKkP,WAAWtG,KAAK+G,MAAM3P,KAAKiP,SAAS1H,+CAI9D,IAAIqH,EAAQ,GAOZ,OANAlL,SAAU1D,KAAKwG,KACVoJ,OAAO,iBACPlJ,UAAU,qBACVyF,KAAK,SAAAtP,GAAC,OAAI+R,EAAMxL,KAAKvG,KAE1B+R,EAAQA,EAAMtJ,KAAK,SAACvE,EAAGwE,GAAQ,OAAOxE,EAAE4L,MAAQpH,EAAEoH,OAAS,EAAI,2CAM/CjJ,SAAU1D,KAAKwG,KAAKoJ,OAAO,iBAAiBlJ,UAAU,WAE9DyF,KAAK,SAAUtP,GACnB6G,SAAU1D,MAAM4P,OAAO,QAAQC,KAAKhT,EAAE8P,+CAM1C,IAAIiC,EAAQ5O,KAAKoP,iBACjBpP,KAAKJ,MAAMyD,iBAAiBuL,EAAMnJ,IAAI,SAAA8B,GAAC,OAAIA,EAAEoF,wDAM7C,IAAImD,EAAU,GAEdpM,SAAU1D,KAAKwG,KAAKE,UAAU,WACzByF,KAAK,WAEF2D,EAAQ1M,KAAK0I,OAAOpI,SAAU1D,MAAMqI,KAAK,SAGjD3E,SAAU1D,KAAKwG,KAAKoJ,OAAO,cACtBvH,KAAK,IAAK3E,MAAOoM,GAAW9P,KAAKyP,YAAc,GAC/CpH,KAAK,QAAS3E,MAAOoM,GAAWpM,MAAOoM,qFAM9B,IAAA/L,EAAA/D,KAEdA,KAAK+P,SAEL,IAAIvJ,EAAM9C,SAAU1D,KAAKwG,KACzBA,EAAIE,UAAU,KAAKC,SACnBH,EAAIC,KAAK,IAET,IACIzG,KAAKwG,IAAIhC,QAAQwL,UAAY,GAC/B,MAAO5H,IAIT,IACI6H,GAHJzJ,EAAM9C,SAAU1D,KAAKwG,MAGNU,OAAOxC,wBAClBK,EAAQkL,EAAKlL,MACbJ,EAASsL,EAAKtL,OACduL,EAAelQ,KAAKJ,MAAMsQ,cAAgB,OAC1CT,EAAczP,KAAKJ,MAAM6P,aAAe,GACxCU,EAAcnQ,KAAKJ,MAAMuQ,aAAe,EAExCC,EAAUpQ,KAAKkC,MAAMsF,OAAOgB,KAAO7D,EAAS3E,KAAKkC,MAAMsF,OAAOc,QAAU,EAE5EtI,KAAK+E,MAAQA,EACb/E,KAAK2E,OAASA,EACd3E,KAAKyP,YAAcA,EAEnBzP,KAAKkD,SAAS,CAAEkN,YAChBpQ,KAAKkQ,aAAeA,EA+BpB1J,EAAI6B,KAAK,SAAU1D,EAAS,MAW5B6B,EAAIK,OAAO,QACNC,QAAQ,SAAS,GACjBuB,KAAK,IAAK,WAAc,OA3BXtE,EAAK7B,MAAMsF,OAAOM,OA4B/BO,KAAK,QAAS,WAAc,OA3BftD,EAAQhB,EAAK7B,MAAMsF,OAAOM,KAAO/D,EAAK7B,MAAMsF,OAAOO,QA+BhEM,KAAK,IAAK+H,EAAUD,EAAc,GAClC9H,KAAK,SAAU8H,GAGpB3J,EAAIK,OAAO,QACNC,QAAQ,aAAa,GACrBuB,KAAK,IAAK+H,EAAUD,EAAc,GAClC9H,KAAK,SAAU8H,GAMpB,IAAMhB,EAASnP,KAAKmP,OAChBF,EAAWjP,KAAKiP,SAChBI,EAAerP,KAAKqP,aAElBE,EAAuBvP,KAAKuP,qBAclC,IAAMD,EAActP,KAAKsP,YAOzB,IAAMrI,EAAOjH,KAAKJ,MAAMuD,WAAanD,KAAKJ,MAAMuD,WAAWsC,IAAI,SAAA8B,GAAO,MAAO,CAAEoF,MAAOpF,KAAS,CAAC,CAAEoF,MAAO3M,KAAKJ,MAAM2L,KAAO,CAAEoB,MAAO3M,KAAKJ,MAAMiP,MAKzIwB,EAHc7J,EAAIK,OAAO,KAC1BC,QAAQ,gBAAgB,GAGxBJ,UAAU,YACVO,KAAKA,GACLgC,QACApC,OAAO,KACPC,QAAQ,UAAU,GAClBuB,KAAK,IAAK,SAAAd,GAAC,OAAIxD,EAAKiL,SAASzH,EAAEoF,SAC/BtE,KAAK,YAAa,SAAAd,GAAC,mBAAAxE,OAAiBgB,EAAKiL,SAASzH,EAAEoF,OAAjC,KAAA5J,OAA2CqN,EAAUF,EAAe,EAApE,OACnB/P,KAAKuD,SACD6F,GAAG,QA3CZ,SAAqB1M,GACjB6G,SAAU1D,MAAMsQ,QAAQxJ,QAAQ,UAAU,KA2CrCyC,GAAG,OAlCZ,SAAiB1M,GACb6G,SAAU1D,MAAMqI,KAAK,IAAK8G,EAAOzL,QAAS6D,IAC1C,IAAMgJ,EAAKtB,EAASE,EAAOzL,QAAS6D,IACpC7D,SAAU1D,MACLqI,KAAK,YAAa,SAAAd,GAAC,mBAAAxE,OAAiBoM,EAAOzL,QAAS6D,GAAjC,KAAAxE,OAAuCqN,EAAUF,EAAe,EAAhE,OAExBxM,SAAU1D,MAAMqI,KAAK,aAAcxL,EAAE8P,MAAQ4D,GAE7ClB,IACAE,MA0BKhG,GAAG,MArBZ,SAAmB1M,GACf6G,SAAU1D,MAAM8G,QAAQ,UAAU,GAClCwI,OAsBJC,IAGAc,EAAaxJ,OAAO,SACfC,QAAQ,eAAe,GACvBuB,KAAK,aAFV,6BAAAtF,OAFkB,iSAKbsF,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAASoH,GACdpH,KAAK,SAAU6H,GAEpBG,EAAaxJ,OAAO,QACfC,QAAQ,eAAe,GACvB+I,KAAK,SAAAhT,GAAC,OAAIA,EAAE8P,QACZtE,KAAK,YAAa,WACf,mBAAAtF,OACI0M,EAAc,EAAI/L,SAAU1D,MAAMkH,OAAOsJ,UAAUzL,MAAQ,EAD/D,KAAAhC,OAGIqN,EACEF,EAAe,EACf,EALN,OAQRxM,SAAU4F,QAAQC,GAAG,sBAAwBvJ,KAAKJ,MAAM4D,MAAOxD,KAAKwJ,YAAYnJ,KAAKL,iDA+JvEkB,GAAK,IAAA2I,EAAA7J,KACdkB,IAAOA,EAAM,CAAClB,KAAKJ,MAAM2L,IAAKvL,KAAKJ,MAAMiP,MAG1BnL,SAAU1D,KAAKwG,KAAKoJ,OAAO,iBACnClJ,UAAU,WACjBO,KAAK/F,EAAIuE,IAAI,SAAA8B,GAAO,MAAO,CAAEoF,MAAOpF,MACpCc,KAAK,IAAK,SAAAd,GAAC,OAAIsC,EAAKmF,SAASzH,EAAEoF,SAC/BtE,KAAK,YAAa,SAAAd,GAAC,mBAAAxE,OAAiB8G,EAAKmF,SAASzH,EAAEoF,OAAjC,KAAA5J,OAA2C8G,EAAK3H,MAAMkO,QAAUvG,EAAKqG,aAAe,EAApF,kDAITO,EAAUC,GAGzB,SAASC,EAAWzP,GAChB,OAAKA,GAAc,EAAE,GAAI,GAH7BpB,OAAA8Q,EAAA,EAAA9Q,QAAAI,EAAA,EAAAJ,CAAAH,EAAAkR,WAAA,qBAAA7Q,MAAyBG,KAAKH,MAU9B,SAAmBwL,EAAMC,GACrB,GAAID,EAAKhO,SAAWiO,EAAKjO,OAAU,OAAO,EAC1C,IAAK,IAAID,EAAI,EAAGA,EAAIiO,EAAKhO,OAAQD,IAC7B,GAAIiO,EAAKjO,KAAOkO,EAAKlO,GAAM,OAAO,EAEtC,OAAO,EAGNuT,CAXUH,EAAWF,EAAStN,YACtBwN,EAAW3Q,KAAKJ,MAAMuD,cAW1BnD,KAAKJ,MAAMuD,aAEZnD,KAAKwP,kBAAkBxP,KAAKJ,MAAMuD,YAClCnD,KAAKqP,eACLrP,KAAKuP,yDAYb,OACIzO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAejB,KAAKJ,MAAM4D,OACzC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVwI,IAAYoH,UAAUd,OAAO5P,KAAKH,eA1d1ByJ,iMCCrB,IAAIjN,EAAK,KACT,IAAKwD,KAAKJ,MAAMuD,YAAcnD,KAAKJ,MAAMuD,WAAW3F,OAAS,EAEzDhB,EACIsE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,WACChB,KAAKJ,MAAMmR,WAAa,UAI9B,CACH,IAAIC,EAAQhR,KAAKJ,MAAMmR,UAAU3U,OAAOoB,OAAS,EAAIwC,KAAKJ,MAAMmR,UAAY/Q,KAAKJ,MAAM4D,OAAS,IAChGhH,EACIsE,EAAAC,EAAAC,cAAA,OACAC,UAAU,gBACVgD,QAASjE,KAAKJ,MAAMqR,cAEhBnQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEfH,EAAAC,EAAAC,cAAA,WAAMgQ,IAKlB,OAAOlQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAazE,UA3BdwF,IAAMC,kCCG/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMDsR,mBAAqBrR,EAAKqR,mBAAmB7Q,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IAPXA,kFAWAiG,GAAK,IAAA/B,EAAA/D,KACpB,OAAO,SAAA2M,GACH,IAAIwE,EAAOrR,OAAAmD,EAAA,EAAAnD,CAAA,GAAQiE,EAAKnE,MAAMuD,YAC9BgO,EAAQrL,GAAO6G,EACf5I,EAAKnE,MAAMyD,iBAAiB8N,qCAMhC,IAAMC,EAAStR,OAAAmD,EAAA,EAAAnD,CAAA,GACRE,KAAKJ,MADG,CAEX4H,OAAQ,CACJgB,IAAK,EACLV,KAAM,GACNC,MAAO,GACPO,OAAQ,MAGV+I,EAAYrR,KAAKJ,MAAM0R,WAAa,cAAgB,YAE1D,OACIxQ,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBAA0BoQ,GACtCvQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACuQ,EACOH,IAKZtQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwQ,EAAD,CACIhO,MAAM,aACNH,iBAAkBrD,KAAKkR,mBAAmB,SAC1C/N,WAAYnD,KAAKJ,MAAMuD,WAAWlE,MAClCsM,IAAKvL,KAAKJ,MAAMgC,UAChBiN,IAAK7O,KAAKJ,MAAMiC,UAChB2F,OAAQ,CAAEgB,IAAK,EAAGF,OAAQ,GAAIR,KAAM,GAAIC,MAAO,OAIvDjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwQ,EAAD,CACIhO,MAAM,iBACNL,WAAYnD,KAAKJ,MAAMuD,WAAWpE,UAClCsE,iBAAkBrD,KAAKkR,mBAAmB,aAC1C3F,IAAKvL,KAAKJ,MAAMkC,cAChB+M,IAAK7O,KAAKJ,MAAMmC,cAChByF,OAAQ,CAAEgB,IAAK,EAAGF,OAAQ,GAAIR,KAAM,GAAIC,MAAO,gBA/D9C/F,IAAMC,uMCE3B,IAAMrC,EAAKE,OAAAmD,EAAA,EAAAnD,CAAA,GACJE,KAAKJ,MADD,CAEP6R,MAAM,IAGV,OACI3Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC0Q,EAAc9R,WAVFoC,IAAMC,kCCG/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDsC,MAAQ,CAAE6O,UAAW,KAC1BlR,EAAK8R,QAAU9R,EAAK8R,QAAQtR,KAAbP,OAAAQ,EAAA,EAAAR,CAAAD,IACfA,EAAK+R,cAAgB/R,EAAK+R,cAAcvR,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKgS,eAAiBhS,EAAKgS,eAAexR,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKkN,YAAclN,EAAKkN,YAAY1M,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK2D,MAAQ3D,EAAK2D,MAAMnD,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IAREA,uEAcf,OAAKG,KAAKJ,MAAMuD,YAAcnD,KAAKJ,MAAMuD,WAAW3F,OAAS,EAAY,GAClEwC,KAAKJ,MAAMuD,WAAW,GAAGK,sCAK5BuN,GACJ/Q,KAAKkD,SAAS,CAAE6N,oDAGNtT,GACVuC,KAAK2R,QAAQlU,EAAK+F,2CAGV/F,GAEJuC,KAAKJ,MAAMuD,YACRnD,KAAKJ,MAAMuD,WAAW3F,OAAS,GAC/BwC,KAAKJ,MAAMuD,WAAW,GAAGxF,KAAOF,EAAKE,GACxCqC,KAAKJ,MAAMyD,iBAAiB,IAE5BrD,KAAKJ,MAAMyD,iBAAiB,CAAC5F,6CAMjCuC,KAAK2R,QAAQ,sCAGR,IAAA5N,EAAA/D,KAEL,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,sBAEAH,EAAAC,EAAAC,cAAC8Q,EAAD,CACInQ,MAAOqE,EAAchG,KAAKJ,MAAM7B,UAChC2H,SAAU1F,KAAKJ,MAAM7B,SAErBmN,gBAAiBlL,KAAK4R,cACtBzG,iBAAkBnL,KAAK6R,eACvB1O,WAAYnD,KAAKJ,MAAMuD,WACvBiI,cAAepL,KAAK+M,cAMxBjM,EAAAC,EAAAC,cAAC+Q,EAAD,CACI5O,WAAYnD,KAAKJ,MAAMuD,WACvB4N,UAAW/Q,KAAKkC,MAAM6O,UACtBE,aAAc,WAAQlN,EAAKnE,MAAMyD,iBAAiB,KAClDG,MAAOxD,KAAKwD,UAGhB1C,EAAAC,EAAAC,cAACgR,EAAD,CACI3O,iBAAkBrD,KAAKJ,MAAMyD,iBAC7B1B,MAAOqE,EAAchG,KAAKJ,MAAM7B,UAChCoF,WAAYnD,KAAKJ,MAAMuD,WACvB0J,YAAa,mCA7EJ7K,IAAMC,0CCI/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDsC,MAAQ,CACTiL,WAAY,IAEhBtN,EAAKwD,iBAAmBxD,EAAKwD,iBAAiBhD,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKuN,iBAAmBvN,EAAKuN,iBAAiB/M,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAK0N,cAAgB1N,EAAK0N,cAAclN,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKgG,gBAAkBhG,EAAKgG,gBAAgBxF,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IARRA,6EAYLpC,GACVuC,KAAKJ,MAAMyD,iBAAiBrD,KAAKJ,MAAMuD,WAAWzD,OAAO,SAAAnC,GAAC,OAAIA,EAAEI,KAAOF,EAAKE,+CAG/DwP,GAGbnN,KAAKkD,SAAS,CACViK,0DASJnN,KAAKoN,iBAAiB,IACtBpN,KAAKJ,MAAMyD,iBAAiBsE,MAAM,KAAMsK,mDAI5BxU,GAGZ,IAAM0F,EAAanD,KAAKJ,MAAMsS,eACxBC,EAA+BnS,KAAKJ,MAAMuD,WAAWzD,OAAO,SAAAnC,GAAC,OAAIA,EAAEI,KAAOF,EAAKE,KAEjFF,EAAKE,MAAMwF,EAAcnD,KAAKqD,iBAAiB8O,GAC5CnS,KAAKqD,iBAAiB8O,EAA6BpP,OAAO,CAACtF,sCAK7D,IAAA2U,EAIqBpS,KAAKJ,MAAMiO,YAAY7N,KAAKkC,MAAMiL,YAJvDkF,EAAAvS,OAAAwS,EAAA,EAAAxS,CAAAsS,EAAA,GAIEzQ,EAJF0Q,EAAA,GAIS3M,EAJT2M,EAAA,GAMCjM,EAAY,CACdpB,SAAUhF,KAAKJ,MAAMoF,SACrB3B,iBAAkBrD,KAAKqD,iBACvB1B,QACA0D,SAAUrF,KAAKJ,MAAM2S,gBACrBnN,SAAS,EACTM,WACAG,gBAAiB7F,KAAK6F,gBACtB1C,WAAYnD,KAAKJ,MAAMsS,gBAM3B,OACIpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC+M,EAAD,CACIlB,YAAY,iBACZL,SAAUxM,KAAKoN,iBACfT,MAAO3M,KAAKkC,MAAMiL,YAHtB,MAWJrM,EAAAC,EAAAC,cAACqF,EAAsBD,WAnFVpE,IAAMC,2CCI/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAgHV4S,eAAiB,SAAA7F,GAEb,OADY9M,EAAK4S,mBACN/S,OAAO,SAAA6H,GAAC,OAAItL,0BAAgBsL,EAAE/D,OAAO9F,QAAQzB,0BAAgB0Q,EAAM+F,QAAQ,IAAI,QAAU,IAE/FhT,OAAO,SAAA6H,GAAC,OAAIA,EAAE/D,MAAM9F,QAAQ,SAAW,IACvCgC,OAAO,SAAA6H,GAAC,OAAIA,EAAE/D,MAAM9F,QAAQ,SAAW,KAtH7BmC,EAgInB8S,4BAA8B,SAAAC,GAAe,IAAZjG,EAAYiG,EAAZjG,MAC7B9M,EAAKqD,SAAS,CACV2P,YAAahT,EAAK2S,eAAe7F,MAlItB9M,EAuInBiT,4BAA8B,WAC1BjT,EAAKqD,SAAS,CACViK,WAAY,GACZ0F,YAAa,MAvIjBhT,EAAKqC,MAAQ,CACTiL,WAAY,GACZ0F,YAAa,GACb9B,UAAW,KAGflR,EAAK4S,iBAAmB5S,EAAK4S,iBAAiBpS,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAExBA,EAAK0N,cAAgB1N,EAAK0N,cAAclN,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKqM,WAAarM,EAAKqM,WAAW7L,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKoM,YAAcpM,EAAKoM,YAAY5L,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAEnBA,EAAK2S,eAAiB3S,EAAK2S,eAAenS,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKkT,mBAAqBlT,EAAKkT,mBAAmB1S,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC1BA,EAAK+M,SAAW/M,EAAK+M,SAASvM,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKiT,4BAA8BjT,EAAKiT,4BAA4BzS,KAAjCP,OAAAQ,EAAA,EAAAR,CAAAD,IACnCA,EAAK8S,4BAA8B9S,EAAK8S,4BAA4BtS,KAAjCP,OAAAQ,EAAA,EAAAR,CAAAD,IACnCA,EAAKmT,iBAAmBnT,EAAKmT,iBAAiB3S,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKoT,qBAAuBpT,EAAKoT,qBAAqB5S,KAA1BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC5BA,EAAK2D,MAAQ3D,EAAK2D,MAAMnD,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IACbA,EAAKqT,eAAiBrT,EAAKqT,eAAe7S,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAItBA,EAAK4S,mBA3BU5S,8EA+BJpC,GACX,IAAKA,EAAO,MAAO,GACnB,IAAIe,EAAOf,EAAK+F,MAAM9E,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC/CD,EAAUhB,EAAKgB,QAEf,OAAGD,IAASC,EAAiBA,EACzBD,GAAQC,EAAiBD,EAAO,KAAOC,EAClCD,IACAC,QAAJ,mCAIL,OAAKuB,KAAKJ,MAAMuD,YAAcnD,KAAKJ,MAAMuD,WAAW3F,OAAS,EAAW,GAEjEwC,KAAKkT,eAAelT,KAAKJ,MAAMuD,WAAW,kDAI/BgQ,EAAWC,GAI7B,OAHsBD,IAAcnT,KAAKJ,OACjCwT,IAAcpT,KAAKkC,iDASZ,IAAA6B,EAAA/D,KAEXqT,EAAiB,GAEjBC,EAActN,EAAchG,KAAKJ,MAAM2T,gBACtC7T,OAEG,SAAAtB,GAAK,OAAqE,IAAjEA,EAAMoF,MAAM9E,MAAM,KAAKgB,OAAO,SAAA6H,GAAC,OAAIA,GAAKA,EAAE/J,OAAS,IAAGA,SAElEiI,IAAI,SAAAhI,GACD,IAAIjB,EAAGsD,OAAAmD,EAAA,EAAAnD,CAAA,GAAQrC,GAgBf,OAdMA,EAAKE,MAAMoG,EAAKnE,MAAM4T,cAExBhX,EAAI2I,MAAQ,GAYT3I,IAkBf,OAZA8W,EAAYnN,QAAQ,SAAAsN,GAChB,IAAMhV,EAAUgV,EAAQjQ,MAAM9E,MAAM,KAAK,GACzC,KAAI2U,EAAe3V,QAAQe,IAAY,GAAvC,CACA4U,EAAejQ,KAAK3E,GACpB,IAAM+E,EAAK,GAAAT,OAAMtE,EAAN,YACPiV,EAAU,CAAElQ,QAAO7F,GAAI6F,EAAO/E,WAClC6U,EAAYlQ,KAAKsQ,MAGrBJ,EAAYlQ,KAAK,CAAEI,MAAO,WAAY7F,GAAI,aAGnC2V,6CAIQK,GAEf,OAAO3T,KAAKkT,eAAeS,oCAYtBC,KAAqB,IAAZC,EAAYC,EAAZD,SACd7T,KAAKkD,SAAS,CACViK,WAAY0G,6CAkBHF,GACb,OACI7S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVjB,KAAKkT,eAAeS,iDAMZvL,KAAmB,IAAduL,EAAcI,EAAdJ,WACtB3T,KAAKJ,MAAMyD,iBAAiB,CAACsQ,4CAI7B3T,KAAKJ,MAAMyD,iBAAiB,wCAGpBxG,GACRmD,KAAKkD,SAAS,CAAE6N,UAAW/Q,KAAKkT,eAAerW,0CAM/CmD,KAAKkD,SAAS,CAAE6N,UAAW,6EA8B3B,IAAMiD,EAAa,CACfnH,YAAa,oBACbF,MAAO3M,KAAKkC,MAAMiL,WAClBP,SAAU5M,KAAK4M,UAGnB,OACI9L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gBAEAH,EAAAC,EAAAC,cAACiT,EAAD,CACItS,MAAO3B,KAAKyS,mBAGZ/M,SAAU1F,KAAKJ,MAAM4T,YACrBrQ,WAAYnD,KAAKJ,MAAMuD,WACvB8I,YAAajM,KAAKiM,YAClBC,WAAYlM,KAAKkM,WACjB7I,iBAAkBrD,KAAKJ,MAAMyD,mBAGjCvC,EAAAC,EAAAC,cAACkT,EAAAnT,EAAD,CACI8R,YAAa7S,KAAKkC,MAAM2Q,YACxBF,4BAA6B3S,KAAK2S,4BAClCG,4BAA6B9S,KAAK8S,4BAClCC,mBAAoB/S,KAAK+S,mBACzBE,qBAAsBjT,KAAKiT,qBAC3BD,iBAAkBhT,KAAKgT,iBACvBgB,WAAYA,IAMhBlT,EAAAC,EAAAC,cAAC+Q,EAAD,CACId,aAAcjR,KAAKuN,cACnBpK,WAAYnD,KAAKJ,MAAMuD,WACvB4N,UAAW/Q,KAAKkC,MAAM6O,UACtBvN,MAAOxD,KAAKwD,kBA7OHxB,IAAMC,iOCH3B,OAAQnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAClBjB,KAAKJ,MAAM+B,MAAM8D,IAAI,SAAChI,EAAM0W,GAAP,OCLSC,EDKuB3W,ECLLqI,EDKWqO,ECFhErT,EAAAC,EAAAC,cAAA,OAAK8E,IAAKA,EAAK7E,UAAU,kBACpBmT,GAJE,IAA4BA,EAAkBtO,YDChC9D,IAAMC,yBEM/B,SAAAtC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDsC,MAAQ,CACTmS,MAAO,EACP/P,UAAW,GAIfzE,EAAKyU,aAAezU,EAAKyU,aAAajU,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKsE,eAAiBtE,EAAKsE,eAAe9D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAEtBA,EAAK0U,WAAavS,IAAMO,YAExB1C,EAAK2U,kBAAoB3U,EAAK2U,kBAAkBnU,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IAdVA,4EA2BN4U,EAAQlX,GAAG,IAAAwG,EAAA/D,KAOZ,OACIc,EAAAC,EAAAC,cAAA,KACI0L,OAAO,SACPgI,IAAI,sBACJC,KAAMF,EAAOG,KACb9O,IAAKvI,GACLuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OACIC,UAAS,eAAA8B,OAAiB0R,EAAOvV,YAAY1B,OAAS,EAAI,WAAa,KACvEsD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVwT,EAAO3G,OAGZhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEPwT,EAAOvV,YACFQ,OAAO,SAAA6Q,GAAE,OAAIA,IACb9K,IAAI,SAAA8K,GAAE,OAAKzP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW6E,IAAG,MAAA/C,OAAQxF,IAAMgT,KACrDxN,OAAO0R,EAAOpW,mBACVqB,OAAO,SAACmV,EAAGtX,GAAJ,OAAUkX,EAAOpW,mBAAmBd,IAAMkX,EAAOnW,sBAAsBf,KAC9EkI,IAAI,SAACjH,EAAMjB,GAAP,OACDuD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW6E,IAAG,MAAA/C,OAAQxF,IAC/BiB,EAAMA,GAAQiW,EAAOnW,sBAAsBf,GAAK,KAAO,GAAIkX,EAAOnW,sBAAsBf,OAMpGiI,OAAO,IAKpB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVwT,EAAO1W,SAAS0H,IAAI,SAAChC,EAAKlG,GAAN,OAAauD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW6E,IAAKvI,GAAIwG,EAAKnE,MAAM7B,SAAS0F,GAAKD,UAEjG1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVjE,2BAAiByX,IAGtB3T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,oDAYhB6T,GASZ,IAAM5T,EAAM4T,EAAWpW,MAAM,KAAK+G,IAAI,SAAA8B,GAAC,OAAIuE,OAAOvE,KAC9CwN,EAAU7T,EAAI,GAEd8T,EADU9T,EAAI,GACiB6T,EAEnC/U,KAAKwU,kBAAkBQ,6CAGTA,GAEVhV,KAAKJ,MAAMqV,QAAQzX,OAASwC,KAAKkC,MAAMmS,OACpCW,EAAqB,KACxBhV,KAAKkD,SAAS,CAAEmR,MAAOrU,KAAKkC,MAAMmS,MAAQrU,KAAKkC,MAAMoC,qDAMzD,IAAMC,EAAe+E,OAAO4L,YAAc5L,OAAO6L,YAC3CH,EAAqB1L,OAAOS,SAASC,KAAKoL,aAAe7Q,EAE/DvE,KAAKwU,kBAAkBQ,+CASvBjL,SAASlF,iBAAiB,SAAU7E,KAAKmE,+DAIzC4F,SAASjF,oBAAoB,SAAU9E,KAAKmE,iDAI5C,OACIrD,EAAAC,EAAAC,cAAA,OACIC,UAAU,WACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,aACcH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQO,IAAQxB,KAAKJ,MAAMqV,QAAQzX,QAAQiE,OAAO,QADhF,wCAGAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,mBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,sBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,aAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,kBAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,SAIJH,EAAAC,EAAAC,cAAA,OAEIyC,IAAKzD,KAAKuU,WACVtT,UAAU,sBAIdH,EAAAC,EAAAC,cAACqU,EAAD,CACI1T,MAAO3B,KAAKJ,MAAMqV,QAAQzP,MAAM,EAAGxF,KAAKkC,MAAMmS,OAAO5O,IAAIzF,KAAKsU,wBAxKrDtS,IAAMC,4BCa7BgF,WAAOnL,EAAQ,KAMfwZ,GAAkB,CACpBzW,OAAU,CAAC,MAAO,QAAS,QAC3B0W,UAAa,GACbC,aAAgB,GAChBhW,SAAY,GACZiW,aAAgB,GAChB7X,SAAY,GACZE,aAAgB,GAChBC,SAAY,GACZe,WAAc,mBAKd,SAAAa,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAEfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACD8V,SAAWzO,GAAK0O,UAErB9V,EAAKqC,MAALpC,OAAAmD,EAAA,EAAAnD,CAAA,GACOD,EAAK6V,SADZ,CAIItY,QAASkY,KAIbzV,EAAK+V,WAAa/V,EAAK+V,WAAWvV,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKgW,aAAehW,EAAKgW,aAAaxV,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKiW,oBAAsBjW,EAAKiW,oBAAoBzV,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC3BA,EAAKkW,SAAW,IAAIC,IAAIC,MAAM,CAAEC,QAAS,KAhB1BrW,0EAoBRzC,GACPA,EAAUA,GAAWkY,GADL,IAAAa,EAE6BlP,GAAK0O,QAAQvY,GAAlDgZ,EAFQD,EAERC,UAAWxY,EAFHuY,EAEGvY,SAAU0D,EAFb6U,EAEa7U,YAE7BtB,KAAKkD,SAAS,CACV9F,UACAgZ,YACAxY,WACA0D,uDAIStB,KAAK4V,yDAEF9P,GAAK,IAAA/B,EAAA/D,KACrB,OAAO,SAAA2F,GACH,IAAIvI,EAAO0C,OAAAmD,EAAA,EAAAnD,CAAA,GAAQiE,EAAK7B,MAAM9E,SAC9BA,EAAQ0I,GAAOH,EACf5B,EAAK6R,WAAWxY,qCAcf,IAAAyM,EAAA7J,KAELqW,QAAQC,IAAI,wBAAyBtW,KAAKkC,OAE1C,IAAIqU,EAAiB,GAOrB,OANAzW,OAAOuB,KAAKrB,KAAKkC,MAAMZ,YAAY1D,UAAUuI,QAAQ,SAAAqQ,GAC7C,CAAC,MAAO,SAAS9Y,QAAQmM,EAAK3H,MAAMZ,YAAY1D,SAAS4Y,GAAGhT,QAAU,GACtE+S,EAAenT,KAAKyG,EAAK3H,MAAMZ,YAAY1D,SAAS4Y,MAKxD1V,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,WAASC,UAAU,6BACfH,EAAAC,EAAAC,cAACyV,EAAD,CACI9U,MAAO3B,KAAKkC,MAAMkU,UAClBhZ,QAAS4C,KAAKkC,MAAM9E,QACpBkE,YAAatB,KAAKkC,MAAMZ,YACxBM,UA1FN,KA2FMC,UA1FN,KA2FMC,cA1FF,KA2FEC,cA1FF,QA+FNjB,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAKfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,OACVgD,QAASjE,KAAK6V,cAFlB,iBAIA/U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,kBAGJH,EAAAC,EAAAC,cAAC0V,EAAD,CACIrT,iBAAkBrD,KAAK8V,oBAAoB,UAC3CnV,IAAKX,KAAKkC,MAAMZ,YAAYzC,OAAO8B,IAAIwE,MACvCvE,MAAOZ,KAAKkC,MAAMZ,YAAYzC,OAAO+B,MAAMuE,MAC3CtE,KAAMb,KAAKkC,MAAMZ,YAAYzC,OAAOgC,KAAKsE,QAG7CrE,EAAAC,EAAAC,cAAC2V,EAAD,CACItT,iBAAkBrD,KAAK8V,oBAAoB,YAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQoC,SAC/BmC,MAAOqE,EAAchG,KAAKkC,MAAMZ,YAAYC,WAC5CmE,SAAU1F,KAAKkC,MAAMZ,YAAYC,UACjC8D,SAAUW,EAAchG,KAAK0V,SAASpU,YAAYC,aAGtDT,EAAAC,EAAAC,cAAC4V,EAAD,CAEIxP,QAhIN,KAiIMC,QA9HF,KA+HEzF,UAlIN,KAmIMC,UAlIN,KAmIMC,cAlIF,KAmIEC,cAlIF,KAmIEsB,iBAAkBrD,KAAK8V,oBAAoB,cAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQ0B,WAC/BwS,WAAYtR,KAAK0V,SAASU,UAAU5Y,OAASwC,KAAKkC,MAAMkU,UAAU5Y,OAClEyJ,KACInH,OAAOuB,KAAKrB,KAAKkC,MAAMZ,YAAYuV,YAC9BpR,IAAI,SAAAhJ,GAAC,OAAIoN,EAAK3H,MAAMZ,YAAYuV,WAAWpa,KAG3CiD,OAAO,SAAAoX,GAAG,OAAIA,EAAItT,OA9IjC,MA8IuDsT,EAAItT,OA7I3D,OA8IeiC,IAAI,SAAA1E,GAAO,OAAOjB,OAAAmD,EAAA,EAAAnD,CAAA,GAAKiB,EAAZ,CAAemI,SAAU,YACpCnG,OACGjD,OAAOuB,KAAKrB,KAAKkC,MAAMZ,YAAYyV,gBAC9BtR,IAAI,SAAAhJ,GAAC,OAAIoN,EAAK3H,MAAMZ,YAAYyV,eAAeta,KAC/CiD,OAAO,SAAAoX,GAAG,OAAIA,EAAItT,OAjJrC,MAiJ+DsT,EAAItT,OAhJnE,OAiJmBiC,IAAI,SAAA1E,GAAO,OAAOjB,OAAAmD,EAAA,EAAAnD,CAAA,GAAKiB,EAAZ,CAAemI,SAAU,mBAKzDpI,EAAAC,EAAAC,cAACgW,EAAD,CACI3T,iBAAkBrD,KAAK8V,oBAAoB,eAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQe,YAC/BqV,YAAaxT,KAAKkC,MAAMZ,YAAYkS,YACpCD,eAAgBvT,KAAK0V,SAASpU,YAAYkS,YAC1C3G,YAAY,yBAGhB/L,EAAAC,EAAAC,cAACiW,EAAD,CACInZ,aAAckC,KAAKkC,MAAMZ,YAAYxD,aACrCyU,gBAAiBvS,KAAK0V,SAASpU,YAAYxD,aAC3CuF,iBAAkBrD,KAAK8V,oBAAoB,gBAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQU,aAC/BoU,eAAgBhM,EAAclG,KAAKkC,MAAM9E,QAAQU,cAEjD+P,YAAa,SAAA7E,GAGT,IAAMiM,EAAUhO,GAAKnJ,aAAaoZ,QAAQlO,GAAK,IAAItK,MAAM,MACrDyY,EAAU,GASd,MAAO,CARMlC,EACZvV,OAAO,SAAAnC,GAAC,OAAIA,EAAEI,MAAMkM,EAAK3H,MAAMZ,YAAYxD,eAC3C2H,IAAI,SAAAlI,GACD,IAAM6Z,EAAOtX,OAAAmD,EAAA,EAAAnD,CAAA,GAAQvC,EAAR,CAAW4H,MAAO0E,EAAK3H,MAAMZ,YAAYxD,aAAaP,EAAEI,IAAIwH,QAEzE,OADAgS,EAAQ5Z,EAAEI,IAAMyZ,EACTA,IAGKD,MAOxBrW,EAAAC,EAAAC,cAACqW,EAAD,CACIhU,iBAAkBrD,KAAK8V,oBAAoB,YAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQW,SAC/BsH,SAAUrF,KAAKkC,MAAMZ,YAAYvD,SACjCA,SAAUiC,KAAKkC,MAAMZ,YAAYvD,SACjC8P,YAAa5G,GAAKlJ,SAASmZ,OAC3BrK,YAAY,iCAKpB/L,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACfH,EAAAC,EAAAC,cAACsW,EAAD,CACIxJ,MAAM,WACNzK,iBAAkBrD,KAAK8V,oBAAoB,YAC3C3S,WAAYnD,KAAKkC,MAAM9E,QAAQQ,SAC/ByH,SAAUrF,KAAKkC,MAAMZ,YAAY1D,SACjCiQ,YAAa5G,GAAKrJ,SAASsZ,OAC3BrK,YAAY,iCAIpB/L,EAAAC,EAAAC,cAAA,WAASC,UAAU,mBACfH,EAAAC,EAAAC,cAACuW,EAAD,CACIxB,SAAU/V,KAAK+V,SACfhY,SAAUiC,KAAKkC,MAAMZ,YAAYvD,SACjCkX,QAASjV,KAAKkC,MAAMkU,qBArMfpU,IAAMC,WClC7BuV,WAAgB,kBAAM1W,EAAAC,EAAAC,cAAA,SAAOuG,EAAE,IAAIyE,EAAE,IAAIjH,MAAM,KAAKJ,OAAO,KAAKgQ,KAAI,0BAAA5R,OADlD,47CAIlB0U,GAAc,WAChB,OACI3W,EAAAC,EAAAC,cAAA,OAAK+D,MAAM,OAAOJ,OAAO,OAAO+S,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,6BAA6BC,WAAW,gCAC5G/W,EAAAC,EAAAC,cAAA,KAAG8W,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,WAClDnX,EAAAC,EAAAC,cAAA,KAAGkX,UAAU,qCACTpX,EAAAC,EAAAC,cAAA,KAAGkX,UAAU,mCACTpX,EAAAC,EAAAC,cAACmX,GAAD,WAQlBC,GAAoB,WACtB,OAAQtX,EAAAC,EAAAC,cAAA,OAAK+D,MAAM,QAAQJ,OAAO,OAAO+S,QAAQ,aAAaC,QAAQ,MAAMC,MAAM,6BAA6BC,WAAW,gCACtH/W,EAAAC,EAAAC,cAAA,KAAG8W,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUI,WAAW,yBAAyBC,SAAS,KAAKC,WAAW,SAASC,eAAa,MAC/I1X,EAAAC,EAAAC,cAAA,KAAGkX,UAAU,qCAAqCF,KAAK,WACnDlX,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOuG,EAAE,MAAMyE,EAAE,MAAjB,2BACAlL,EAAAC,EAAAC,cAAA,SAAOuG,EAAE,MAAMyE,EAAE,MAAjB,sNASZ,OACIlL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGyX,IAAI,0BAA0B9D,KAAK,iCAAgC7T,EAAAC,EAAAC,cAAC0X,GAAD,QAE1E5X,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGyX,IAAI,oDAAoD9D,KAAK,uCAChE7T,EAAAC,EAAAC,cAAC2X,GAAD,gBATS3W,IAAMC,WCnBpB2W,OAVf,WACE,ICHgCC,EDG1BC,GCH0BD,EDGAE,GCD9B,SAAAC,GAAA,SAAAC,IAAA,OAAAnZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAiZ,GAAAnZ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmZ,GAAAtR,MAAA3H,KAAAiS,YAAA,OAAAnS,OAAAoZ,EAAA,EAAApZ,CAAAmZ,EAAAD,GAAAlZ,OAAAqZ,EAAA,EAAArZ,CAAAmZ,EAAA,EAAAnT,IAAA,SAAA6G,MAAA,WAEQ,OAAQ7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACnBH,EAAAC,EAAAC,cAAC6X,EAAD,WAHZI,EAAA,CAAqBjX,IAAMC,YDE7B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoY,GAAD,MACAtY,EAAAC,EAAAC,cAAC8X,EAAD,QEEcO,QACW,cAA7B/P,OAAOgQ,SAASC,UAEe,UAA7BjQ,OAAOgQ,SAASC,UAEhBjQ,OAAOgQ,SAASC,SAASC,MACvB,2DCXNC,IAAS1J,OAAOjP,EAAAC,EAAAC,cAAC0Y,GAAD,MAAS3P,SAAS4P,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gDEnInB,SAASjd,EAAiBkd,GAEtB,OAAQA,EAAOC,iBAAmB,IAC7Bza,OAAO,SAAAqB,GAAC,OAAIA,IACZ0E,IAAI,SAAA1E,GAAC,OAAI+K,OAAO/K,EAAEyE,MAAM,EAAG,MAC3BF,OAAO,GALhB5I,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,qCAAAI,wBCKAjB,EAAOC,QAAU,SAASiL,EAAMmT,GAAY,IAMhCne,EAAoBH,EAAQ,IAA5BG,gBACFma,EAAYta,EAAQ,IAEtBue,EAAS,GAEKpT,EAEZd,QAAQ,SAAAxJ,GAAC,OAAI0d,EAAO1d,EAAEgB,IAAMhB,IAElC,IAAM2d,EAAO,SAAA3c,GAAE,OAAI0c,EAAO1c,IAEtBP,EAAU,GAoCd,OAlCAA,EAAQmd,qBAAuB,SAAUC,GAErC,OADAA,EAAQA,GAAS,GACV,SAAU/c,GACb,IAAK,IAAIF,EAAI,EAAGA,EAAIid,EAAMhd,OAAQD,IAAK,CACnC,IAAIrB,EAAOse,EAAMjd,GACjB,GAAItB,EAAgBwB,EAAK+F,OAAO9F,QAAQzB,EAAgBC,IAAS,EAAG,OAAO,EAE/E,OAAO,IA2BR,CAACoe,OAAMpD,OAfd,SAAiBsD,GAEb,IAAIhe,EAAM,GAUV,OATAge,EAAQA,GAAS,IAEhBpE,EAAU3W,SAAW,IAAI0G,QAAQ,SAAAxJ,GAC9BA,EAAEyd,GAAYjU,QAAQ,SAAAqQ,GAClB,IAAMpZ,EAAQmd,qBAAqBC,EAA7Bpd,CAAoCkd,EAAK9D,IAAQ,OAAO,EAC1Dha,EAAIkB,QAAQ4c,EAAK9D,IAAM,GAAGha,EAAI4G,KAAKkX,EAAK9D,QAI7Cha,mYCxCf,SAASmZ,EAAQ1X,GAEb,IAAIzB,EAAM,CAENoB,SAAY,GACZ2D,UAAa,GACbsV,WAAc,GACd/Y,aAAgB,GAChBe,OAAU,CACN8B,IAAK,CAAE6C,MAAO,MAAO2B,MAAO,GAC5BvE,MAAO,CAAE4C,MAAO,QAAS2B,MAAO,GAChCtE,KAAM,CAAE2C,MAAO,OAAQ2B,MAAO,IAElCpH,SAAY,GAGZgZ,eAAkB,GAGlBvD,YAAe,GACfiH,YAAe,GACfC,eAAkB,IAMtB,SAASC,EAAKC,EAAQnd,GACZA,EAAKE,MAAMnB,EAAIoe,KACjBpe,EAAIoe,GAAQnd,EAAKE,IAAjBmC,OAAA+a,EAAA,EAAA/a,CAAA,GAA4BrC,EAA5B,CAAkC0H,MAAO,KAE7C3I,EAAIoe,GAAQnd,EAAKE,IAAIwH,OAAS,EAGlC,IAAI2V,EAAM1E,QAAgBnY,GAAW,IAErC,SAASuV,EAAY7W,GACjB,IAAIH,EAAM,GACJue,GAAape,EAAE0B,oBAAsB,IAAIb,OACzCwd,GAAgBre,EAAE2B,uBAAyB,IAAId,OACrD,GAAIud,EAAY,GAAKA,IAAcC,EAAgB,MAAO,GAC1D,IAAK,IAAIzd,EAAI,EAAGA,EAAIwd,EAAWxd,IAAK,CAChC,IAAMiB,EAAO7B,EAAE0B,mBAAmBd,IAAM,GACpCkB,EAAU9B,EAAE2B,sBAAsBf,IAAM,GAC5Cf,EAAI4G,KAAJ,GAAAL,OAAYvE,EAAZ,KAAAuE,OAAoBtE,EAApB,KAAAsE,OAA+BtE,IAEnC,OAAOjC,EAuEX,OApEAse,EAAMA,EAAIrV,IAAI,SAAA9I,GAAO,OAAOmD,OAAA+a,EAAA,EAAA/a,CAAA,GAAKnD,EAAZ,CAAe6W,YAAaA,EAAY7W,QAEzDwJ,QAAQ,SAAAxJ,GAGRA,EAAEse,aAAa9U,QAAQ,SAAAqQ,GAAOmE,EAAK,WAAY/c,OAAc4Y,MAK7DmE,EAAK,SAFc,CAAEhd,GAAIV,oBAAUN,GAAGR,gBAMlCQ,EAAEuC,aAAwC,IAAzBvC,EAAEuC,YAAY1B,QAC/Bmd,EAAK,aAAc,CAAEnX,MAAO7G,EAAEuC,YAAY,GAAIvB,GAAIhB,EAAEuC,YAAY,KAIpEyb,EAAK,YAAa,CAAEnX,MAAO7G,EAAE6C,SAAU7B,GAAIhB,EAAE6C,WAG7C7C,EAAE6W,YAAYrN,QAAQ,SAAA/H,GAClB,IAAMI,EAAOJ,EAAMM,MAAM,KAAK,GAC1BD,EAAUL,EAAMM,MAAM,KAAK,GAE/Bic,EAAK,cAAe,CAChBnX,MAAOpF,EACPT,GAAIS,EACJI,OACAC,YAEJkc,EAAK,cAAe,CAChBnX,MAAOhF,EACPb,GAAIa,IAERmc,EAAK,iBAAkB,CACnBnX,MAAO/E,EACPd,GAAIc,MAOZ,IAAMyc,EAAQle,2BAAiBL,GAC/Bge,EAAK,iBAAkB,CAAEnX,MAAO0X,EAAOvd,GAAIud,KAG1Cve,EAAEoB,UAAY,IAAIoI,QAAQ,SAAA5I,GAAOod,EAAK,WAAY5c,OAAcR,OAGhEZ,EAAEmB,cAAgB,IAAIqI,QAAQ,SAAA5I,GAAOod,EAAK,eAAgB7c,OAAkBP,QAU7D,CAChB6Y,UAAW0E,EACXld,cAAUkL,EACVxH,YAAa9E,qCCjIrBE,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAK,IAAA,IAAMke,EAAcrf,EAAQ,KAE5B,SAASmB,EAAUme,GACf,IAAMza,EAAMya,EAASH,aAAavd,QAAQyd,EAAYre,cAAgB,EACtE8D,EAAQwa,EAASH,aAAavd,QAAQyd,EAAYpe,gBAAkB,EAGpE,OAFO4D,GAAOC,EAEI,OACTA,EAAe,QACfD,EAAa,MACf,+BCPX,IAAM0a,EAA2Bvf,EAAQ,IAEnCmL,EAAOnL,EAAQ,KAChB2J,IAAI,SAAA1E,GAKD,MAJY,CACRyC,MAAOzC,EAAE+M,MACTnQ,GAAIoD,EAAEua,OAKlBvf,EAAOC,QAAUqf,EAAyBpU,EAAM,oCCdhD,IAAMoU,EAA2Bvf,EAAQ,IAEnCmL,EAAOnL,EAAQ,KAChB2J,IAAI,SAAAlI,GAED,GAAIA,EAAEge,cAAc/d,OAAS,EAAI,MAAM,IAAIsF,MAAM,mCACjD,MAAO,CACHnF,GAAIJ,EAAE+d,IACN9X,MAAOjG,EAAEge,cAAc,MAKnCxf,EAAOC,QAAUqf,EAAyBpU,EAAM,oCCbhD,IAAMoU,EAA2Bvf,EAAQ,IAEnCmL,EAAOnL,EAAQ,KAChB2J,IAAI,SAAAlI,GAED,GAAIA,EAAEge,cAAc/d,OAAS,EAAI,MAAM,IAAIsF,MAAM,+BACjD,MAAO,CACHnF,GAAIJ,EAAE+d,IACN9X,MAAOjG,EAAEge,cAAc,MAMnCxf,EAAOC,QAAUqf,EAAyBpU,EAAM","file":"static/js/main.8f56bf00.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst __all = require(\"./json/index.8.min.json\");\nconst all = () => __all;\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\n// TODO - eventually, I should just make all of the filters into factories \n//        like this one, so the function is declared once per query \nlet filterBirthPlacesFactory = options => {\n \n    if (!options \n        || !options.birthplaces\n        || (options.birthplaces || []).length < 1){ \n            return () => true \n        }\n\n    return r => {\n        let place = options.birthplaces[0];\n\n        // these two should always match\n        if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n\n        for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n    \n            let city = r.birth_place_cities[j],\n                country = r.birth_place_countries[j];\n            //if (!city || !country ){ return false}\n            if (normalizeString(country) !== normalizeString(place.country)) return false;\n\n            if (place.city){\n                //console.log(\"There's a city to filter\", place)\n                // if there's a city, limit by that as well\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            } //else { console.log(\"there's no city required\", city, country, place.city, place.country, place) }\n\n            return true;\n        }\n\n        return false;\n    }\n\n}\n\nfilters.getResources = options => {\n\n    let filterBirthPlaces = filterBirthPlacesFactory(options)\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n    \n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        if (options.dateRanges\n            && options.dateRanges.recording) {\n            const recordingYear = getRecordingYear(r);\n            if (recordingYear < options.dateRanges.recording[0]\n                || recordingYear > options.dateRanges.recording[1]\n                || !recordingYear) { return false }\n\n        } else { \n            // console.log(\"Skipping recording year filter\")\n    }\n\n        // TODO - filter by year of birth\n        if (options.dateRanges && options.dateRanges.birth) {\n            const birthYears = r.birth_years || [];\n            if (!birthYears.reduce((curr, next) => {\n                if (!curr) { return false }\n                if (!options) { return true };\n                if (!options.dateRanges) { return true };\n                if (!options.dateRanges.birth) { return true }\n                if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n                return true;\n            }, true)) { return false }\n\n        } else { \n            // console.log(\"Skipping birth year filter\")\n        }\n\n        if (! filterBirthPlaces(r)){ return false}\n        // if ((options.birthplaces || []).length > 0) {\n            \n        //     let place = options.birthplaces[0];\n\n        //     for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n        //         if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n        //         let city = r.birth_place_cities[j],\n        //             country = r.birth_place_countries[j];\n        //         if (normalizeString(country) !== normalizeString(place.country)) return false;\n        //         if (place.city){\n        //             // if there's a city, limit by that as well\n        //             if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n        //         }\n        //         console.log(\"match\", place, city, country)\n\n\n        //     }\n        // }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length === 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\n// let query = options => all().filter(filters.getResources(options))\n\nfunction query(options){\n    if (!options){ return all()}\n    return all().filter(filters.getResources(options));\n}\n\nmodule.exports = { all, query }","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes\n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw new Error(`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 10\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.scrollHeight //getBoundingClientRect().height,\n              //startPct = scrollTop / totalHeight,\n            //   endPct = scrollBottom / totalHeight\n            ;\n\n        // console.log(\"height\",totalHeight, this.poolRef.current.getBoundingClientRect().height)\n\n        // if ((endPct * 100) > 99){\n        if ((totalHeight - scrollBottom) <= 80){\n            // console.log(\"height\", scrollBottom, totalHeight)\n\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .slice(0,this.state.itemCount)\n                    // .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        // skip the filter loop\n                        if (!(item.label && item.label.length > 0)){ return (null)}\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\n//import D3Component from \"../../Viz/D3Component\";\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        // const margin = this.props.margin || {\n        //     bottom: 30,\n        //     top: 20,\n        //     left: 20,\n        //     right: 20\n        // }\n        const margin = this.state.margin;\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const tickSteps = width > 600 ? 10 : 40;\n        const tickValues = d3.range(this.props.minYear, this.props.maxYear, tickSteps);\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(tickValues)\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n        \n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            // .tickSize(width - margin.left - margin.right)\n            .ticks(height / 20)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        const ty = d3.transition().duration(1000).ease(d3.easeQuadIn);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition(ty)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(null)\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(1000))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n\n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n        this.setMargin = this.setMargin.bind(this);\n\n        this.state = {\n            currentWidth: -1,\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            }\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n\n    }\n\n    setMargin(newMargin){\n        const margin = {...this.state.margin, ...newMargin};\n        this.setState({ margin });\n\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return <div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>;\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        ).descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter => enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                // .on(\"click\", d => {\n                //     if (d.data.id in this.props.itemDict) {\n                //         return this.props.clickCallback(d)\n                //     }\n                // })\n                ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            // .on(\"click\", d => {\n            //     if (d.data.id in this.props.itemDict) {\n            //         return this.props.clickCallback(d.data)\n            //     }\n            // })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", item => this.props.mouseInCallback (item.data))\n            .on(\"mouseout\", item => this.props.mouseOutCallback (item.data))\n            .on(\"click\", item => this.props.clickCallback(item.data));\n\n\n        d3.select(window).on(\"resize.treemap\", this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","import \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\n// import { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = Math.min(width,\n                this.props.height || svg.node().getBoundingClientRect().height\n            );\n\n        svg.attr(\"height\", height + \"px\");\n\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        // let allItems = this.props.items;\n\n        //--------------HACK--------------\n        // TODO - Fix this q-a-d hack to prevent redrawing if the data have not changed\n        //        Get rid of this whole block....\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        if (allItemsMatch(\n\n            // this works, but do I really have to loop this each time?\n            // objectToArray((prevProps || {}).itemDict || {}),\n            // objectToArray(this.props.itemDict)\n\n            // this seems to be working just as well without the two loops\n            (prevProps || { items: [] }).items,\n            this.props.items\n        )) {\n            // console.log(\"redraw prevented\")\n\n            // objectToArray(this.props.itemDict))) {\n            return\n        }\n        // ... down to here.\n        //----------END OF HACK-----------\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => Number(d.count ? d.count : 0));\n\n        const data = root.descendants()\n            // .filter(d => d.data.label.indexOf(\"root\") < 0)\n            .filter(d => d.data.label.indexOf(\"|country\") < 0)\n            .filter(d => d.data.label.indexOf(\"country|\") < 0)\n\n\n\n        packLayout(root);\n        svg.selectAll(\"circle.city\")//.transition();\n\n        // const t = d3.transition().duration(1100);\n        this.allowInteraction = data.length;\n\n        // let nodes = \n\n        // function realChange(newRadius, oldRadius) {\n        //     return (newRadius > 0) && (oldRadius > 0);\n        // };\n\n        const r = d => d.r || 0;\n        const x = d => d.x || 0;\n        const y = d => d.y || 0;\n\n        svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    // .classed(\"city\", d => d.data.label.indexOf(\"|country\") < 0)\n                    // .classed(\"country\", d => d.data.label.indexOf(\",\") === 0)\n        \n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length === 1\n                            && this.props.selections[0].id === d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', x)\n                    .attr('cy', y)\n                    .attr('r', r),\n                update => update\n                    .attr(\"data-city\", d => d.data.label)\n                    .each(function (d, i) {\n\n                        let handle = d3.select(this).style(\"opacity\", \"0.5\");\n                        const newRadius = r(d);\n                        const currentRadius = d3.select(this).attr(\"r\") || 0;\n\n                        if (newRadius > 0 && currentRadius > 0 && currentRadius !== newRadius) {\n                            // console.log(\"Animating\")\n                            handle = handle.transition().duration(1000 * Math.random());\n                        } else {\n                            //console.log(\"Skipping animation\")\n                        }\n\n                        handle\n                            .style(\"opacity\", \"1\")\n                            .attr('cx', x)\n                            .attr('cy', y)\n                            .attr('r', r);\n\n                    }),\n                // .call(update => {\n                //     update\n                //     .transition(t)\n                //         .transition(function (d) {\n                //             console.log(\"Should I transition?\",d)\n                //             // only transition if \n                //             if (r(d) <= 0) { return null }\n                //             return realChange(r(d), d3.select(this).attr(\"r\") || 0) ? t: null\n                //         })\n                //         .attr('cx', x)\n                //         .attr('cy', y)\n                //         .attr('r', r);\n\n\n                // }),\n                exit => exit.remove()\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n        d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n\n    newMethod(handle, t) {\n        handle = handle.transition(t);\n        return handle;\n    }\n}","import React from 'react';\n// import CheckboxInput from \"../CheckboxInput\";\n// import GenericInput from \"../GenericInput\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            // items: props.items,\n            suggestions: [],\n            selections:[]\n        }\n\n        // react-autosuggest functions\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSectionTitle = this.renderSectionTitle.bind(this);\n    }\n\n    // Teach Autosuggest how to calculate suggestions for any given input value.\n    getSuggestions(value) {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        const ret = inputLength === 0 ? [] : this.props.items.filter(item =>{\n            return item.label.toLowerCase().slice(0, inputLength) === inputValue\n\n        });\n        return ret;\n    };\n\n    getSuggestionValue(suggestion) {\n        return suggestion.value;\n    }\n\n    renderSuggestion(suggestion) {\n        return (\n            <div>\n                {suggestion.label}\n            </div>\n        );\n    }\n\n    onChange = (event, { newValue , method}) => {\n\n        var selections = this.state.selections.slice();\n        if (method === \"click\" || method === \"enter\") { selections.push(newValue)}\n\n        this.setState({\n            value: newValue,\n            selections: selections\n        });\n    };\n\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n    \n    renderSectionTitle(_) {\n        return (null);\n    }\n\n    render() {\n        const { suggestions, value } = this.state;\n        const inputProps = {\n            placeholder: 'Begin typing',\n            value,\n            onChange: this.onChange,\n        };\n        return (\n            <div>\n                <div>\n                    {this.state.selections.map(item=>{\n                        return (<div>{item}</div>)\n                    })}\n                </div>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                />\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\"></div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 50\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.getBoundingClientRect().height,\n            //   startPct = scrollTop / totalHeight,\n              endPct = scrollBottom / totalHeight;\n\n        if (endPct * 100 > 80){\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    render(){\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"TagPool\">\n                {(this.props.items.slice(0, this.state.itemCount) || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\n// import GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections) {\n        this.props.updateSelections(newSelections);\n        this.setState({ searchTerm: \"\" })\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t,\n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        // return (null);\n\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n            .filter(i => i.id in this.props.allItems)\n\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                    <div className=\"type-area\">\n                        <div className=\"title-area\">{this.props.title}</div>\n                        <TextInput\n                            callback={this.updateSearchTerm}\n                            placeholder={this.props.placeholder}\n                            value={this.state.searchTerm}\n                        ></TextInput>\n\n                    </div>\n                    <SelectionPool\n                        callback={this.dropSelection}\n                        items={this.props.selections}\n                    ></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n//import D3Component from \"../../Viz/D3Component\"\nimport D3Component from \"@bit/jakekara.metadash.d3-component\";\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     handles: [],\n        //     range: [{ value: props.min }, { value: props.max }],\n        //     labels: [{ value: props.min }, { value: props.max }]\n        // }\n        this.state ={\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            },\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        };\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            // .range([this.margin.left, this.width - this.margin.right]);\n            .range([this.state.margin.left, this.width - this.state.margin.right]);\n\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function (d) {\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try {\n            this.svg.current.innerHTML = \"\";\n        } catch (e) { }\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6;\n\n        let yCenter = this.state.margin.top + (height - this.state.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        // this.yCenter = yCenter;\n        this.setState({ yCenter })\n        this.handleHeight = handleHeight;\n\n        // for really narrow windows, put the label\n        // top and center\n        // let labelX, labelY, \n        // trackX, trackWidth;\n        // // if (width < 300) {\n        // labelX = el => width / 2 - d3.select(el).node().getBBox().width / 2;\n        // // labelY = _ => 0;//yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // // labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // labelY = el => {\n        //     this.setMargin({ top: d3.select(el).node().getBBox().height })\n        //     // this.margin.top = d3.select(el).node().getBBox().height;\n        //     // yCenter += 4;\n        //     // this.setState({yCenter});\n        //     return d3.select(el).node().getBBox().height;\n        // }\n        let trackX = _ => this.state.margin.left,\n        trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n        // } else {\n        //     this.setMargin({ left: 140 });\n        //     // this.margin.left = 140;\n        //     labelX = el => 145 + 10 - d3.select(el).node().getBBox().width - 2 * handleWidth\n        //     labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        //     trackX = _ => this.state.margin.left;\n        //     trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n\n        // }\n\n        svg.attr(\"height\", height + \"px\");\n\n        // // add label and position it\n        // svg.append(\"text\")\n        //     .classed(\"track-label\", true)\n        //     .text(this.props.label || \"Double Slider\")\n        //     .attr(\"x\", function () { return labelX(this) })\n        //     .attr(\"y\", function () { return labelY(this) });\n        // // .attr(\"x\", function () { return (lpad + 10) - d3.select(this).node().getBBox().width - 2 * handleWidth })\n        // // .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", function () { return trackX(this) })\n            .attr(\"width\", function () { return trackWidth(this) })\n\n            // .attr(\"x\", this.state.margin.left)\n            // .attr(\"width\", width - this.state.margin.left - this.state.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.state.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                <div className=\"track-label\">{this.props.label}</div>\n                <div className=\"track-wrapper\">\n                    {D3Component.prototype.render.call(this)}\n                </div>\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n    render() {\n        let ret=(null);\n        if (!this.props.selections || this.props.selections.length < 1) {\n\n            ret = (\n                <div className=\"unselected-item\">\n                    <div className=\"x-icon\"></div>\n                    <div>\n                    {this.props.hoverText || \" \"}\n                    </div>\n                </div>                \n            )\n        } else {\n            let htext = this.props.hoverText.trim().length > 0 ? this.props.hoverText : this.props.label || \" \";\n            ret = (\n                <div \n                className=\"selected-item\"\n                onClick={this.props.dropCallback}\n                >\n                    <div className=\"x-icon\"></div>\n                    {/* <div>{this.props.label}</div> */}\n                    <div>{htext}</div>\n                </div>\n            )\n        }\n\n        return <div className=\"HoverText\">{ret}</div>\n\n        \n    }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n        \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 0,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        const props = {\n            ...this.props,\n            lazy: true\n        };\n\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { ItemSelector, HoverText } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.label = this.label.bind(this);\n\n    }\n\n\n    label() {\n        if (!this.props.selections || this.props.selections.length < 1) { return \"\" }\n        return this.props.selections[0].label;\n    }\n\n\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.label)\n    }\n\n    handleClick(item) {\n\n        if (this.props.selections\n            && this.props.selections.length > 0\n            && this.props.selections[0].id === item.id) {\n            this.props.updateSelections([])\n        } else {\n            this.props.updateSelections([item])\n        }\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                {/* <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div> */}\n                <HoverText\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    dropCallback={() => { this.props.updateSelections([]) }}\n                    label={this.label()}\n                ></HoverText>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n\n\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n\n        this.setState({\n            searchTerm, \n        })\n\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = this.props.selectionsDict; //arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        // 6-3-19 - updated to expect an array and a dictionary to prevent\n        // the need to use arrayToObject(dict+arr+interviewers)\n        const [items, itemDict] = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items,//: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict,//: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: this.props.selectionsDict,//arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\nimport { HoverText } from \"../../Inputs\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \",\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n        this.label = this.label.bind(this);\n        this.cleanPlaceName = this.cleanPlaceName.bind(this);\n\n        // this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    cleanPlaceName(item){\n        if (!item){ return \"\"}\n        let city = item.label.split(\"|\")[0].split(\",\")[0], \n        country = item.country;\n\n        if(city === country){ return country}\n        if (city && country){ return city + \", \" + country}\n        else if (city){ return city}\n        else if (country){ return country}\n        // return item.label.split(\"|\")[0].split(\",\")[0] + \", \" + item.country\n    }\n    label(){\n        if (!this.props.selections || this.props.selections.length < 1){ return \"\"}\n\n        return this.cleanPlaceName(this.props.selections[0]);\n//        return this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = [];\n\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                // only keep places with a city and country, in theory\n                place => place.label.split(\"|\").filter(x => x && x.length > 0).length === 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n\n                // const element = ret;\n\n                // if (addedCountries.indexOf(country) < 0) { \n                //     addedCountries.push(country);\n                //     const label = `${country}|root`,\n                //         newItem = { label, id: label };\n                //     countryItems.push(newItem)\n                //  }\n\n                return ret\n            });\n\n        // clusterData = clusterData.concat(countryItems);\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|country`, // changed from \"root\" to \"country\"\n                newItem = { label, id: label, country };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"country|\", id: \"country|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n//        return suggestion.label;\n        return this.cleanPlaceName(suggestion);\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value.replace(\":\",\"|\"))) >= 0)\n        // filter out roots\n            .filter(x => x.label.indexOf(\"|root\") < 0)\n            .filter(x => x.label.indexOf(\"root|\") < 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            searchTerm: \"\",\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {this.cleanPlaceName(suggestion)}\n                {/* {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")} */}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: this.cleanPlaceName(d) })\n\n        // this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \", \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    // renderHoverField() {\n    //     if (!this.props.selections || this.props.selections.length < 1) {\n\n    //         return (\n    //             <span>\n    //                 {this.state.hoverText || \" \"}\n    //             </span>\n    //         )\n    //     }\n    //     return (\n    //         <div \n    //         className=\"selected-item\"\n    //         onClick={this.dropSelection}\n    //         >\n    //             <div className=\"x-icon\"></div>\n    //             <div>{this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country}</div>\n    //         </div>\n    //     )\n    // }\n\n    placeLabel(){\n\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    // items={this.cleanClusterData()}\n                    // allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n\n                {/* <div className=\"hover-text\">\n                    {this.renderHoverField()}\n                </div> */}\n                <HoverText\n                    dropCallback={this.dropSelection}\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    label={this.label()}\n                ></HoverText>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport wrapResultListItem from \"./ResultListItem\";\nimport \"./style/main.scss\";\nexport default class extends React.Component {\n\n    render() {\n        return (<div className=\"ResultList\">\n            {this.props.items.map((item, idx)=>wrapResultListItem(item, idx))}\n        </div>);\n    }\n\n}","import React from 'react';\n\nexport default function wrapResultListItem(WrappedComponent, key){\n\n    return (\n        <div key={key} className=\"ResultListItem\">\n            {WrappedComponent}\n        </div>\n    )\n    // return class extends React.Component {\n    //     render(){return (\n    //         <div className=\"ResultListItem\">\n    //         </div>\n    //     )}\n    // }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n// import {ResultList} from \"@bit/jakekara.metadash.fortunoff-app\"\nimport { ResultList } from \"../../FortunoffApp\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef();\n\n        this.decideToIncrement = this.decideToIncrement.bind(this);\n\n        // if (this.props.pymChild) {\n        //     this.handlePymScroll = this.handlePymScroll.bind(this);\n        //     this.props.pymChild.onMessage('viewport-iframe-position', this.handlePymScroll);\n        // }\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n\n        // return class extends React.component {\n\n        //     render() {\n\n\n                return (\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={result.link}\n                        key={i}>\n                        <div className=\"result-item-container\">\n                            <div\n                                className={`result-item ${result.birth_years.length > 1 ? \"multiple\" : \"\"}`}>\n                                <div className=\"testimony-name\">\n                                    {result.title}\n                                </div>\n\n                                <div className=\"birth-year\">\n                                    {\n                                        result.birth_years\n                                            .filter(yr => yr)\n                                            .map(yr => (<li className=\"sub-item\" key={`by-${i}`}>{yr}</li>))\n                                            .concat(result.birth_place_cities\n                                                .filter((_, i) => result.birth_place_cities[i] || result.birth_place_countries[i])\n                                                .map((city, i) => (\n                                                    <li className=\"sub-item\" key={`bp-${i}`}>\n                                                        {city}{city && result.birth_place_countries[i] ? \", \" : \"\"}{result.birth_place_countries[i]}\n                                                    </li>\n                                                )\n                                                )\n\n                                            )\n                                            .slice(-2) // don't show more than two items\n\n                                    }\n\n                                </div>\n                                <div className=\"affiliate\">\n                                    {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                                </div>\n                                <div className=\"recording-year\">\n                                    {getRecordingYear(result)}\n                                </div>\n\n                                <div className=\"big-button-container\">\n                                    <div className=\"big-button\">View</div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </a>\n                )\n\n        //     }\n        // }\n    }\n\n    handlePymScroll(parentInfo) {\n        // this.props.pymChild.sendMessage(\n        //     \"console-log\",\n        //     parentInfo.split(\" \").map(x => Number(x))\n        // );\n        // parentInfo contains in order\n        // Viewport width and height.\n        // Iframe top, left, bottom and right positions.\n\n        const arr = parentInfo.split(\" \").map(x => Number(x)),\n            vheight = arr[1],\n            ibottom = arr[4],\n            distanceFromBottom = ibottom - vheight;\n\n        this.decideToIncrement(distanceFromBottom);\n    }\n\n    decideToIncrement(distanceFromBottom) {\n        // this.props.pymChild.sendMessage(\"console-log\", distanceFromBottom);\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        this.decideToIncrement(distanceFromBottom);\n\n        // if (this.props.results.length > this.state.limit\n        //     && distanceFromBottom < 100) {\n        //     this.setState({ limit: this.state.limit + this.state.increment })\n        // }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    \n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    \n                </div>\n                {/* {this.props.results.slice(0, this.state.limit).map(this.renderResult)} */}\n                <ResultList\n                    items={this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                ></ResultList>\n\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// import { TagFilter, RangeSlider } from '../Inputs';\n// import { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\nimport pym from \"pym.js\";\n\nimport \"./style/main.scss\";\n\nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n        this.pymChild = new pym.Child({ polling: 50});\n\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).forEach(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        selectionsDict={arrayToObject(this.state.filters.interviewers)} // TODO - improve efficiency\n                        // allInterviewers={ data.interviewers.search() } // TODO - improve efficiency\n                        filterItems={t => {\n                            // 6-3-19 - just updated to return both an array and a dictionary\n                            // so it doesn't have to be retouched later on. (dict+arr+interviewers)\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            let retDict = {}\n                            let retArr = results\n                            .filter(i => i.id in this.state.summaryData.interviewers)\n                            .map(i => { \n                                const retItem = { ...i, count: this.state.summaryData.interviewers[i.id].count }\n                                retDict[i.id] = retItem;\n                                return retItem;\n                             })\n\n                            return [retArr, retDict];\n                            // return results\n                            //     .filter(i => i.id in this.state.summaryData.interviewers)\n                            //     .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        pymChild={this.pymChild}\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport \"./style/main.scss\";\n\nconst yaleLogoImgData = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGOGCHvlwAAA/5JREFUaAXtmP1x2kAQxeNM/o9KUCoIHVjugFQQpQKTChRXgFMBpALcgZQKIBWIDkwHzu+JO3tHn2CQR4P1Zp52b3dv7/ZWEhqunp6ePrwnfHxPxarWseBL7/jY4bHDF3YC4y19YQ2tlDN2uHIkF2YYO3xhDa2UM3a4ciQXZhg7fGENrZTzqWIZjiFiK9dQMoN38GRcDegfj4BqbmHkiCiw4XoDd/vhaVc9wynU/zxdjIgpo2uOch8KFSyUC3uosRWBr7qowzCEc1jGCsMEKqaJAb4YPkJBcgZlb5rTZbd7SU7IU1nHv6W3nNZPR3twsm+soUZXR9QFD91+91D21+KUua1r+oJ9kDaa+QFyBkMzblLnOAL4C27gYFEuWBv9UdrtojQuDycYYriFd3DQqCt4y47vza4jdLEJ6q5QPqi9dWDXuoK1RXVqZ/ba1OUpMRF8gBkcPJo+PFSsXmK+0BA9hktooe4qtqu7E2Ii+Bn+gxnUvHMiJJnW+Qr/wq0jwqDjlZ/i99DPjf2pSZxDP0GV17+zTZG54xrpoVwxbJqX+ECk9KY42SOYQuVcOSIKpFwn8Hn+s2KNRlewRcJAcwKoBdZuXJdngU/QJrx/Vlj2F81XHu+zMtmHFFfp1mf12MVpHzbXhLHyC5IhLObZyU36XLMMNHnhxhGybp4tTIvbmNzNlYih9Xk9kdMhQXq7lVMfgAxrYuy+F95vEzTpAcH+tFCL20dyAevm2Pi8JibF5pGg1OWQ3SNBqYvJXcCqwR85v0QOixxNLy3zlBcvF/sCi3DqhSNbE77hyJqcZ7DH5AhdHr2o6r7ZA+eXCL1+SMGKXcJbqOTCEqroOsie1TnOaLs2uX6jb8y4VT20YCWxBVq9dYGSM2QsnorQJFCxmRm3qscU3JqoxRngm0LdIdLPgei1SZq+tF6bz85TkSv4CL9DPfNf4BaeE+ExyfrqcM4m/EZu0DN4TmQki1xCPc9Lp3eKPjocsWroVt4hM6efU2xMshj94Eelj4LtG1QF94E/paR6dNow885jCranGPkEHTLEL3ooR+gHSJszNvYudUPA0gRF6GsoaREy0GHoHbJfy3+BtEh9sSxgGfrCka/4gjEyLAXqKy2BC5jCObRYM8ih7MqlLzXZPKTLVl5HthSWkWNIoc+xQn+eX05ix8QdjJRIOzdm/GhmS0+gFhb9ZlCLuBlS861dPoucgV3D65orXxnKNYU+rpB9/i+tW2gCBd2Cu0J7ucgXwDrfS9Thms+nGY05+yz48K2+YeQxL6033FZ/S40F93e2w8g8dngYfehvF2OH+zvbYWQeOzyMPvS3i7HD/Z3tMDKPHR5GH/rbxdjh/s52GJnfXYf/Ax099yeWp4N/AAAAAElFTkSuQmCC\"\nconst YaleLogoImage = () => <image x=\"0\" y=\"0\" width=\"42\" height=\"42\" href={`data:image/jpeg;base64,${yaleLogoImgData}`} />\n\n\nconst YaleLogoSVG = () => {\n    return (\n        <svg width=\"41px\" height=\"19px\" viewBox=\"0 0 41 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g transform=\"translate(-26.000000, -31.000000)\">\n                    <g transform=\"translate(26.000000, 20.000000)\">\n                        <YaleLogoImage></YaleLogoImage>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nconst FortunoffTitleSVG = () => {\n    return (<svg width=\"218px\" height=\"40px\" viewBox=\"0 0 218 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" fontFamily=\"YaleNew-Roman, YaleNew\" fontSize=\"19\" fontWeight=\"normal\" line-spacing=\"24\">\n            <g transform=\"translate(-121.000000, -23.000000)\" fill=\"#1098AB\">\n                <text>\n                    <tspan x=\"121\" y=\"38\">Fortunoff Video Archive</tspan>\n                    <tspan x=\"121\" y=\"62\">for Holocaust Testimonies</tspan>\n                </text>\n            </g>\n        </g>\n    </svg>)\n}\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <header className=\"SiteBanner\">\n                <div className=\"site-logo\">\n                    <a alt=\"Yale University Library\" href=\"https://web.library.yale.edu/\"><YaleLogoSVG></YaleLogoSVG></a>\n                </div>\n                <div className=\"site-title\">\n                    <a alt=\"Fortunoff Video Archive for Holocaust Testimonies\" href=\"https://fortunoff.library.yale.edu/\">\n                    <FortunoffTitleSVG></FortunoffTitleSVG>\n                    </a>\n                </div>\n            </header>\n        );\n    }\n}","import React from 'react';\nimport MetaDash from './MetaDash';\nimport SiteBanner from './SiteBanner';\nimport {fortunize} from \"./FortunoffApp\";\n\nfunction App() {\n  const FortunizedApp = fortunize(MetaDash)\n  return (\n    <div className=\"App\">\n      <SiteBanner></SiteBanner>\n      <FortunizedApp></FortunizedApp>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default function fortunize(WrappedApp) {\n\n    return class extends React.Component {\n        render() {\n            return (<div className=\"FortunoffApp\">\n                <WrappedApp></WrappedApp>\n            </div>);\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    // let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.2.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.7.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}